#!/bin/sh

# This script, originally created for IR056414 by tsonnen 11/13/2013, can be used on request to put requested files over to IPSOS.  
# Update the following 3 variables with the filename you are sending, before running this script.
# data_file, data_file_out, pgp_data_file"

export PGPPASS=seavvdmzftp
export pgp_remote_signature="Veronica Gunta" 
export ftp_host=ftp.ipsos-na.com
export outdate=`/bin/date +%b%d%Y`
export data_file=Ipsos_OtherCardholders_November2013.csv
export data_file_out=Ipsos_OtherCardholders_November2013.$outdate.csv
export pgp_data_file=Ipsos_OtherCardholders_November2013.$outdate.asc
export outbound_dir=$HOME/outbound
export outbound_archive=${outbound_dir}.archive
export datestamp=`/bin/date +%b%d%Y.%H%M`

. /opt/local/ops_scripts/function_lib

#--------------------------------------------------------------------------
# This script goes out to seavvfile1\ftpprod\mpprod\ipsos and pulls in a file to place on the Linux server.
# It is then encrypted then sent to IPSOS  
#--------------------------------------------------------------------------

cd $outbound_dir

#get the file
echo -e "\nget $data file from asprodftp" 
	ftp -v asprodftp <<GETDATA >ftp_results.$$
	cd "mpprod\IPSOS"
	get $data_file
	bye
GETDATA

	result=$?

	if [ $result -ne 0 ]; then
	echo "ftp get of $data_file failed"
	cat ftp_results.$$
	exit 4
	fi

rm -f ftp_results.$$

# Encrypt the file with recipients signature
# Note that the variable $gpg_secret MUST be exported and contain our
# passphrase in order to have the encryption work in non-interactive mode
echo -e "\nencrypt $data_file"

echo $PGPPASS | gpg --passphrase-fd 0 --batch -v --armor --sign -r "Veronica Gunta" -o $pgp_data_file --encrypt $data_file >pgp_transcript.$$ 2>&1
	result=$?

	if [ $result -ne 0 ]; then
	echo -e "\n$data_file encryption failure, contact EPS\n"
	cat pgp_transcript.$$
	exit 8
	fi

rm -f pgp_transcript.$$

echo -e "\n***********************************************"
echo -e "FTP the $pgp_data_file to $ftp_host"
echo -e "************************************************\n"
	ftp -v $ftp_host <<FTPDATA >ftp_results.$$ 
	put $pgp_data_file
	ls -lrt 
	bye
FTPDATA

echo -e "\results of ftp put"
cat ftp_results.$$
rm ftp_results.$$

echo -e "\nmove $data file on asprodftp" 
	ftp -v asprodftp <<GETDATA >ftp_results.$$
	cd "mpprod\IPSOS\Processed"
	put $data_file $data_file_out
        cd ..
        del $data_file
	bye
GETDATA

echo -e "\ncreate archived version of file"
gzip <$data_file >$outbound_archive/$data_file.$datestamp.gz

output_records=`wc -l $data_file`
echo -e "\n$datestamp: $output_records data records sent"

echo -e "\nclean up outbound directory"
rm -f ftp_results.$$ $pgp_data_file $data_file $data_file_out

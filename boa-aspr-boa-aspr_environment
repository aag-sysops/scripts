#!/bin/bash

# Set up the Bank of America comsumer AS Payroll data transfer environment
# This script is used by other scripts to preset values from a common source.

export PGPPASS=seavvdmzftp
export pgp_remote_signature=BOAPUBKY
export BATCHMODE=yes
export ftp_host=elink-ftp5.bankofamerica.com
export outbound_dir=$HOME/outbound
export outbound_archive=${outbound_dir}.archive
export hcmdir=/home/hcmprod/outbound/bankofamerica
export alert_recipient=dean.liebrich@alaskaair.com
export datestamp=`/bin/date +%b%d%Y.%H%M`
#export debug_to="joanne.gies@alaskaair.com"
export info_to="payroll@alaskaair.com"
#export info_to="joanne.gies@alaskaair.com"
export errors_to="eps@alaskaair.com"
export logfile=$HOME/transfer_log
export last_file_received=$HOME/last_file_received
export FileAge=20

. /opt/local/ops_scripts/function_lib

function mainproc {

rm ~/.netrc
ln -s ~/.netrc.$filetype ~/.netrc
	
	if [ -f $asc_file ]; then
echo -e "\nprevious encryted file $asc_file found in $outbound_dir
	moving file to $outbound_archive\n"
	mv $asc_file $outbound_archive.$datestamp
	rm -f ftp_results*
	fi

echo -e "\nget $file from $hcmdir"
cp $hcmdir/$file $outbound_dir

	result=$?

	if [ $result -ne 0 ]; then
echo -e "\ncopy of $file to $outbound_dir failed\n"
echo -e "contents of $hcmdir:"
ls -l $hcmdir
	exit 4
	fi

echo -e "\nencrypt file $file"
echo $PGPPASS | gpg --passphrase-fd 0 --batch -v --armor --sign -r $pgp_remote_signature --output $asc_file --encrypt $file >pgp_transcript.$$ 2>&1

	result=$?

	if [ $result -ne 0 ]; then
echo -e "\nBofA AS payroll $filetype file encryption failure, contact Production Services\n"
cat pgp_transcript.$$
rm pgp_transcript.$$
	exit 8
	fi

cat pgp_transcript.$$
rm -f pgp_transcript.$$

ftp_vendor $ftp_host $asc_file "$boa_file" passive bin

echo -e "\ncreate archived version of $asc_file"
mv $asc_file $outbound_archive/$asc_file.$datestamp

output_records=`wc -l $file`
echo -e "\n$datestamp: $output_records records sent to $ftp_host"

echo -e "\nclean up outbound directory & hcmprod directory"
rm -f $tagfile $hcmdir/$file $file

Mail -s "AS Payroll $file file sent to BofA `date`" $info_to </dev/null

echo -e "\nremove archived files older than $FileAge days"
	
        find $outbound_archive/$asc_file* -mtime +$FileAge -print |
        while read FILE1
        do
        echo "removing file $FILE1"
        rm -f $FILE1
        done

}

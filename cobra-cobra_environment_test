#!/bin/bash

# Set up the Cobra data transfer environment
# This script is used by other scripts to preset values from a common source.
#cobra does not want email notifying them of files received

set -x

export PGPPASS=seavvdmzftp
export pgp_remote_signature="Mark Chilbert"
export ftp_host=ftp.cobramanagement.com
export inbound_dir=$HOME/inbound
export inbound_archive=${inbound_dir}.archive
export outbound_dir=$HOME/outbound
export outbound_archive=${outbound_dir}.archive
export alert_recipient=dean.liebrich@alaskaair.com
#export hcmdir=/ftptest/HCMTEST/outbound/cobra #test
export ashcmdir=/home/hcmprod/outbound/ascobra #as prod
export qxhcmdir=/home/hcmprod/outbound/qxcobra #qx prod
export datestamp=`/bin/date +%Y%m%d`
export info_to="joanne.gies@alaskaair.com"
export errors_to="production.services@aaskaair.com"
export cobra_mailto="joanne.gies@alaskaair.com"
export logfile=$HOME/transfer_log
export FileAge=20

. /opt/local/ops_scripts/function_lib

function cobraproc {

cd $outbound_dir

echo -e "get $datafile from $hcmdir"
cp $hcmdir/$datafile $outbound_dir

	result=$?

        if [ $result -ne 0 ]; then
        echo -e "\nget $datafile from $hcmdir failed"
	echo "contents of $hcmdir:"
	ls -l $hcmdir
        exit 4
        fi

echo -e "\nencrypt outgoing file for Cobra $airline"
echo $PGPPASS | gpg --passphrase-fd 0 --batch -v --armor -r "$pgp_remote_signature" --output $pgpfile --encrypt $datafile > pgp_transcript.$$ 2>&1

	result=$?

	if [ $result -ne 0 ]; then
echo -e "\n$airline Cobra encryption failure, contact EPS\n"
 	cat pgp_transcript.$$
	rm -fv pgp_transcript.$$
 	exit 8
	fi


rm -f pgp_transcript.$$

ftp_vendor $ftp_host $pgpfile $pgpfile bin

securezip $datafile outbound

echo -e "\nclean up inbound directory"
rm -f $pgpfile $hcmdir/$datafile $datafile $tagfile

archive_clean $outbound_archive $basename $FileAge

}

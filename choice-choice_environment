#!/bin/bash

# Set up the CHOICE data transfer environment for choice 
# This script is used by other scripts to preset values from a common source.
# Usage: (in another script) ". $HOME/bin/choice_environment"

export ftp_local_host=asprodftp
export lz=mpprod
export inbound_dir=$HOME/inbound
export inbound_archive=${inbound_dir}.archive
export outbound_dir=$HOME/outbound
export outbound_archive=${outbound_dir}.archive
export datestamp=`/bin/date +%b%d%Y.%H%M`
export file_prefix=ECCHOICEHOTELSPIT
export local_file=${file_prefix}.txt
export info_to="production.services@alaskaair.com"
export errors_to="dean.liebrich@alaskaair.com"
FileAge=30

. /opt/local/ops_scripts/function_lib

function inbound {

cd $inbound_dir

	if [ ! -s $data_file ]; then
	echo "expected file $data_file not found"
	echo "CONTACT Prod. Svcs. during normal business hours"
	exit 4
	fi

records=`wc -l $data_file | awk '{print $1}'`
	
	if [ $records -eq 0 ]; then
	echo "Choice data file ($data_file) is empty"
	exit 4
	fi

echo -e "\n`whoami` file ($records records) received at `date`"

#rename local file for SOLAR conv.
mv $data_file $local_file

securezip $local_file inbound

ftp_check $ftp_local_host
ftp_solar_in $ftp_local_host $local_file

echo -e "\ncleaning up inbound directory"
rm -f $local_file

archive_clean $inbound_archive $local_file $FileAge

}

function outbound {

cd $outbound_dir

ftp_check $ftp_local_host
ftp_solar_out $ftp_local_host $file_prefix

export solar_file=`ls -1 $file_prefix*`
echo -e "\nprocessing outbound file $solar_file"

securezip $solar_file outbound

echo -e "\nrename $solar_file to $data_file"
mv $solar_file $data_file

ftp_delete $ftp_local_host $solar_file "cd mpprod/outbound/handback"

archive_clean $outbound_archive $file_prefix $FileAge

}

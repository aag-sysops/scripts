#!/bin/bash

# Set up the ADP scanned image data transfer stand alone script

export PGPPASS=seavvdmzftp
export BATCHMODE=yes          # Turn on non-prompted PGP encrypting
export pgp_remote_signature="ADPTAX"
ftp_local_host=asprodftp
#export ftp_local_host=testftp
export basename=p.aag1.wgps
export outbound_dir=$HOME/outbound
export outbound_archive=${outbound_dir}.archive
export inbound_dir=$HOME/inbound
export inbound_archive=${inbound_dir}.archive
#export wc_mailto="pc.hcm.production.system.msgs@alaskaair.com"
export datestamp=`/bin/date +%b%d%Y.%H%M`
export logfile=$HOME/transfer_log
export FileAge=30

. /opt/local/ops_scripts/function_lib

direction=$1

#make sure direction parm was passed in as first arg
        if [ -z $direction ]; then
echo -e "\nMissing direction parm.
proper syntax is: process_adp_data direction where
direction equals in or out\n"
        exit 4
        fi

function outbound {

cd $outbound_dir

echo -e "\nget file on $ftp_local_host" 
	ftp -v -i $ftp_local_host <<GETDATA >ftp_results.$$ 2>&1
        cd "PSHCMFTP\outbound\adp"
	dir
        bin
      	mget *.img.zip
        quit
GETDATA

cat ftp_results.$$
rm -fv ftp_results.$$

echo -e "\nprocessing ADP outbound scanned image file" $File1

	ls -1 *.img.zip | while read File1
	do

export tag_file=`echo $File1 | sed -e 's/.zip/.tag/'`
export pgpfile=`echo $File1 | sed -e 's/.zip/.pgp/'`

echo -e "\nThis is the image file" $File1
echo -e "\nThis is the tag file" $tag_file
echo -e "\nThis is the pgp file" $pgpfile
#echo -e "\nThis is the remote file" $remote_file

securezip $File1 outbound
records=`wc -l $File1 | awk '{print $1}'`

echo -e "\nencrypting file $File1 with $records records"

echo $PGPPASS | gpg --passphrase-fd 0 --batch -v --armor -r "$pgp_remote_signature" --output $pgpfile --encrypt $File1 >pgp_transcript.$$
	
	result=$?

	if [ ! -s $pgpfile -o $result -ne 0 ]; then
	echo -e "\n$datafile encryption failure, contact Production Analyst" 
	cat pgp_transcript.$$
	rm pgp_transcript.$$
	exit 4
	fi

echo -e "\nThis is the $File1" $File1
rm -fv $File1 pgp_transcript.$$

mv -v  $pgpfile $remote_file

echo -e "\nDelete file on $ftp_local_host" 
       ftp -v -i $ftp_local_host <<GETDATA >ftp_results.$$ 2>&1
       cd "PSHCMFTP\outbound\adp"
       dir
       del "$File1"   
       del "$tag_file"
        quit
GETDATA

	result=$?
	if [ $result -ne 0 ]; then
	echo -e "\narchive of file $File1 on $ftp_local_host failed.\n"
	cat ftp_results.$$
	rm -fv ftp_results.$$
	exit 4
	fi

rm -f ftp_results.$$
rm -f $File1

      done

archive_clean $outbound_archive .img $FileAge

}

function inbound {

cd $inbound_dir

	ls -1 $filepref* | while read File1
	do

echo -e "\nprocessing Image ADP in $File1"

securezip $File1 inbound

echo -e "\ndecrypting file `ls -1 $File1`"

echo $PGPPASS | gpg --passphrase-fd 0 --batch -v --output $datafile --decrypt $File1 >gpg_transcript.$$

	result=$?

	if [ $result -ne 0 -o ! -s $datafile ]; then
	echo "`whoami` $filepref decryption failure, contact Production Services."
	cat gpg_transcript.$$
	rm -f gpg_transcript.$$
  	exit 8
	fi

records=`wc -l $datafile | awk '{print $1}'`

echo -e "\sending file to payroll with $records records to $payroll"

#echo -e "\nemail to HCM team the stdlist for this job"
#Mail -s "ADP Inbound Ack File" $wc_mailto < $File1

rm -fv gpg_transcript.$$ $File1

archive_clean $inbound_archive $File1 $FileAge

	done

archive_clean AAG*.ack* $FileAge

}

case "$direction" in

        in)
echo -e "\nBegin processing for `whoami` inbound processing"

export filepref=AAG*.ack*  #pgp file acknowledgement file
export datafile=AAG.acknowledge.txt

inbound
echo -e "\nEnd of `whoami` inbound processing"
        ;;

        out)
echo -e "\nBegin processing for `whoami` outbound processing"
outbound
echo -e "\nEnd of `whoami` outbound processing"
        ;;

esac


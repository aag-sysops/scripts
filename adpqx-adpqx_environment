#!/bin/bash

export PGPPASS=seavvdmzftp
export pgp_remote_sig="ADPALLiance"
export ftp_host=asprodftp
export data_file=empdemo.txt
export pgp_data_file=${data_file}.asc
export tagfile=empdemo.tag
export outbound_dir=$HOME/outbound
export outbound_archive=${outbound_dir}.archive
export inbound_dir=$HOME/inbound
export inbound_archive=${inbound_dir}.archive
export alert_recipient=eps@alaskaair.com
export datestamp=`/bin/date +%b%d%Y.%H%M`
export info_to="dean.liebricha@alaskaair.com"
export errors_to="eps@alaskaair.com"
export FileAge=30

. /opt/local/ops_scripts/function_lib

function encrypt {

cd $outbound_dir

	if [ -s $pgp_data_file ]; then
	mv $pgp_data_file $outbound_archive/$pgp_data_file.$datestamp
echo -e "\nprevious encrypted file $pgp_data_file left in $outbound_dir\n"
	fi
 
ftp_vendor_get $ftp_host $data_file $data_file "cd payroll/qx/qxtimedata"

	if [ ! -s $data_file ]; then
	echo -e "\nFTP get of $data_file failed\n"
	exit 4
	fi

echo -e "\nencrypt $data_file"
echo $PGPPASS | gpg --passphrase-fd 0 --batch -v --armor --sign -r $pgp_remote_sig --output $pgp_data_file --encrypt $data_file > pgp_transcript.$$ 2>&1

	result=$?

	if [ $result -ne 0 ]; then
	echo -e "\n$data_file encryption failure\n" 
	cat pgp_transcript.$$
	rm -f pgp_transcript.$$
	exit 8
	fi

rm -f pgp_transcript.$$

echo -e "\ndelete $data_file from $ftp_host"
	ftp -v $ftp_host <<DEL >ftp_results.$$
	cd payroll/qx/qxtimedata
	del $data_file
	del $tagfile
	quit
DEL

	result=$?

	if [ $result -ne 0 ]; then
	echo "delete $data_file from $ftp_host failed"
	cat $ftp_results.$$
	rm -f $ftp_results.$$
	exit 4
	fi

cat ftp_results.$$
rm -f ftp_results.$$

echo -e "\nput copy of $pgp_data_file in $outbound_archive"
cp $pgp_data_file $outbound_archive/$pgp_data_file.$datestamp

echo -e "\nremoving archived files older than $FileAge days"
	find $outbound_archive/$pgp_data_file* -mtime +$FileAge -print |
	while read FILE1
	do
	echo "removing file $FILE1"
	rm -f $FILE1
	done

echo -e "\nclean up $inbound_dir"
rm -f $data_file

}

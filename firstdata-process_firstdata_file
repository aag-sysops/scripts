#!/bin/sh

#export ftp_host=MNOR-000546@www.mftcat.firstdataclients.com 	#TEST
export ftp_host=MNOS-000546@www.mft3.firstdataclients.com 	#PROD
export ftp_local_host=asprodftp
export outbound_dir=$HOME/outbound
export outbound_archive=$HOME/outbound.archive
export inbound_dir=$HOME/inbound
export inbound_archive=$HOME/inbound.archive
#export data_file=alaskatest.CPTD4824.txt #test
export data_file=alaska.CPTD4824.txt
export in_file_prefix=CPTD4824
export dom=alaskaair.com
export mail_list="accounts.receivable@$dom,fire.team.oncall.support@$dom"
export tag_file=firstdata_out.tag
export datestamp=`date +%m%d%Y.%H%M`
export maildate=`date "+%B %d, %Y"`
export FileAge=30

. /opt/local/ops_scripts/function_lib

direction=$1

#make sure direction parm was passed in as first arg
        if [ -z $direction ]; then
echo -e "\n     Missing direction parm.
        proper syntax is: process_hipcricket_data direction where
        direction equals in or out\n"
        exit 4
        fi

function convert {

export char=$1
export `whoami`_file_name=$2

echo -e "\nconvert character $char to numeric equivalent"

case "$char" in

	A)
export numeric=1
       ;;

	B)
export numeric=2
       ;;

	C)
export numeric=3
       ;;

	D)
export numeric=4
       ;;

	E)
export numeric=5
       ;;

	F)
export numeric=6
       ;;

	G)
export numeric=7
       ;;

	H)
export numeric=8
       ;;

	I)
export numeric=9
       ;;

	\{)
export numeric=0
	;;

	*)
echo -e "\nchar argument missing or invalid,
The letter extracted from file `whoami`_file_name
did not find valid character.  Value passed was
$char"
exit 4
	;;
esac

}

function format {

export amount2=$numeric
export totamt=`echo ${amount1}${amount2} | awk '{print $1 + 0}'`
let centscut2="`echo $totamt | wc | awk '{print $3}'` -1"
let centscut1=$centscut2-1
let dollcut="`echo $totamt | wc | awk '{print $3}'` -3"
export dollars=`echo $totamt | cut -c1-${dollcut}`
export cents=`echo $totamt | cut -c${centscut1}-${centscut2}`

}

function outproc {

cd $outbound_dir

echo -e "\nsftp $data_file to $ftp_host"
	sftp -v $ftp_host <<EOF >ftp_results.$$ 2>&1
	cd /MNOS-To-FDC
	put $data_file
	dir
EOF
	result=$?

succftp=`cat ftp_results.$$ | grep "Authentication succeeded" | wc -l`

	if [ $result -ne 0 -o $succftp -lt 1 ]; then
	echo -e "\nFTP of file $data_file to $ftp_host failed\n"
	cat ftp_results.$$
	rm -fv ftp_result.$$
	exit 4
	fi

cat ftp_results.$$
rm -fv ftp_results.$$

securezip $data_file outbound

archive_clean $outbound_archive $data_file $FileAge

echo -e "\nclean up $outbound_dir"
rm -fv $data_file $tag_file

}

function inproc {

cd $inbound_dir

echo -e "\nsftp $in_file_prefix from $ftp_host"
	sftp -v $ftp_host <<EOF >ftp_results.$$ 2>&1
	mget $in_file_prefix*
	dir
EOF
	result=$?

succftp=`cat ftp_results.$$ | grep "Authentication succeeded" | wc -l`

	if [ $result -ne 0 -o $succftp -lt 1 ]; then
	echo -e "\nFTP of file $data_file to $ftp_host failed\n"
	cat ftp_results.$$
	rm -fv ftp_result.$$
	exit 4
	fi

cat ftp_results.$$
rm -fv ftp_results.$$

export data_file=`ls -1 $in_file_prefix*`

securezip $data_file inbound

export char=`tail -1 $data_file | cut -c10` 
convert $char $data_file
export amount1=`tail -1 $data_file | cut -c2-9`
format
export total1=\$${dollars}.${cents}

export char=`tail -1 $data_file | cut -c19`
convert $char $data_file
export amount1=`tail -1 $data_file | cut -c11-18`
format
export total2=\-\$${dollars}.${cents}

export MSG="For $maildate, the Sales total is $total1 and the Refunds total is $total2"

ftp_file $ftp_local_host $data_file $data_file "cd rev_acctg/first_data"

set -x
echo $MSG | Mail -s "First Data confirmation" $mail_list
set +x

echo "First Data confirmation: For $maildate, the Sales total is $total1 and the Refunds total is $total2" > confirm.txt

ftp_file $ftp_local_host confirm.txt confirm_$datestamp.txt "cd AR_AccountsReceivable\FirstData"

rm -fv confirm.txt

archive_clean $inbound_archive CPTD $FileAge

echo -e "\nclean up $inbound_dir"
rm -fv $data_file

}

case "$direction" in

        out)

echo -e "\nProcessing file $data_file for `whoami`"
outproc
echo -e "\nFile $data_file processing for `whoami` complete"
        ;;

        in)

echo -e "\nBegin processing confirmation file for `whoami` inbound"
inproc
echo -e "\nEnd of `whoami` inbound confirmation file processing"

        ;;

esac

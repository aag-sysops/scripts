#!/bin/bash

# Set the environment variables
export PGPPASS=seavvdmzftp
export remote_sig=BOAPUBKY
export ftp_host=elink-ftp4.bankofamerica.com
export ftp_local_host=asprodftp
export outbound_dir=$HOME/outbound
export outbound_archive=${outbound_dir}.archive
export inbound_dir=$HOME/inbound
export inbound_archive=${inbound_dir}.archive
export tagfile=boa_apos.tag
export pstagfile=???
export DT=`date '+%c'`
export info_to="dean.liebrich@alaskaair.com"
export datestamp=`/bin/date '+%b%d%Y.%H%M'`
export outdate=`/bin/date '+%Y%m%d'`
export errors_to="joanne.gies@alaskaair.com,dean.liebrich"
export logfile=$HOME/transfer_log
export FileAge=99

. /opt/local/ops_scripts/function_lib

export airdir=$1

	if [ -z $airdir ]; then
echo -e "\n	Missing airline/direction parm,
	proper syntax is process_boa-apos_data airline.direction
	where airline=as or qx and direction=in or out. i.e.
	process_boa-apos_data asout\n"
	exit 4
	fi

function outproc {

rm ~/.netrc
ln -s ~/.netrc.$airdir ~/.netrc

cd $outbound_dir

ftp_vendor_chk $ftp_host

echo -e "\ncopy $data_file from $psfindir_out to $outbound_dir"
cp $psfindir_out/$data_file $outbound_dir
errorchk $? "copy $data_file from $psfindir_out to $outbound_dir"

echo -e "\nencrypt file $data_file"
echo $PGPPASS | gpg --passphrase-fd 0 --batch -v --armor --sign -r $remote_sig --output $data_file_asc --encrypt $data_file >pgp_transcript.$$
	
errorchk $? "encrypt file $data_file"

cat pgp_transcript.$$
rm -f pgp_transcript.$$

ftp_vendor $ftp_host $data_file_asc "$boa_pgp_file" passive bin

securezip $data_file outbound

echo -e "\nremove temporary files"
rm -fv $data_file $data_file_asc $psfindir_out/$tag_file $psfindir_out/$data_file

archive_clean $outbound_archive $data_file $FileAge

}

function inproc {

rm ~/.netrc
ln -s ~/.netrc.$airdir ~/.netrc

cd $inbound_dir

ftp_vendor_chk $ftp_host

ftp_vendor_get $ftp_host "$boa_pgp_file" $local_pgp_file passive bin

echo -e "\ndecrypt $local_pgp_file" 
echo $PGPPASS | gpg --passphrase-f 0 --batch --decrypt --output $local_file $local_pgp_file

errorchk $? "decrypt $local_pgp_file"

echo -e "\ncopy $local_file to $psfindir_in"
cp $local_file $psfindir_in
errorchk $? "copy $local_file to $psfindir_in"

echo -e "\ncreate file $psfindir_in/$tag_file"
touch $psfindir_in/$tag_file
errorchk $? "create file $psfindir_in/$tag_file"

securezip $local_file inbound

echo "remove temp files"
rm -fv $local_file $local_pgp_file
errorchk $? "remove temp files"

archive_clean $inbound_archive $local_file $FileAge

}


case "$airdir" in

	qxin)
###
### no longer used ###
###

export airline=QX
export psfindir_in=/home/finprod/inbound/qxbankofamerica
export boa_pgp_file="PGP ARP RECONM NCFS4TZ"
export local_file=qxboain.txt
export local_pgp_file=${local_file}.pgp
export tag_file=qxboain.tag

echo -e "\nBegin processing for QX inbound $local_file"
inproc
echo -e "\nInbound processing complete for $local_file"

;;

	asout)
airline=AS
export psfindir_out=/home/finprod/outbound/ap_asboa
export data_file=appospay_AS_BOA.dat
export tag_file=appospay_AS_BOA.tag
export data_file_asc=${data_file}.asc
export boa_pgp_file="PGP APR ISSUED NCFR4TY"


echo -e "\nBegin processing for $airline outbound file $data_file"
outproc
echo -e "\nOutbound processing complete for $airline file $data_file"

;;

	qxout)
export airline=QX
export psfindir_out=/home/finprod/outbound/ap_qxboa
export data_file=appospay_QX_BOA.dat
export tag_file=appospay_QX_BOA.tag
export data_file_asc=${data_file}.asc
export boa_pgp_file="PGP ARP INBNDR GAFR5KK"

echo -e "\nBegin processing for $airline outbound file $data_file"
outproc
echo -e "\nOutbound processing complete for $airline file $data_file"

;;

esac

#!/bin/bash

# Set up the cartera data transfer environment
# This script is used by other scripts to preset values from a common source.

export ftp_local_host=asprodftp
#export ftp_local_host=testftp
export sftp_host=alaskaairlines@ftp03.cartera.com
export pgp_remote_signature="Mall Networks Data Exchange"
export inbound_dir=$HOME/inbound
export inbound_archive=${inbound_dir}.archive
export outbound_dir=$HOME/outbound
export outbound_archive=${outbound_dir}.archive
export datestamp=`/bin/date +%b%d%Y.%H%M`
export info_to="production.services@alaskaair.com"
#export mail_to="mlr.alerts@alaskaair.com"
#export mail_to="joanne.gies@alaskaair.com"
export nofiledate=`/bin/date "+%A, %D"`
FileAge=30

. /opt/local/ops_scripts/function_lib

function inbound {

cd $inbound_dir

	ls -1 * | while read File1
	do

echo -e "\nprocessing cartera $File1"

securezip $File1 inbound

ftp_file $ftp_local_host $File1 $File1 "cd employeetravel/cartera/from"

echo -e "\nArchive file on $ftp_local_host" 
	ftp -v -i $ftp_local_host <<GETDATA >ftp_results.$$ 2>&1
        cd "employeetravel/cartera/from/Archive"
        put $File1 
        quit
GETDATA

	result=$?

	if [ $result -ne 0 ]; then
	echo "Archive of file $File1 on $ftp_local_host failed" | Mail -s "$program failure" $mail_to
	cat ftp_results.$$
	rm ftp_results.$$
	fi

cat ftp_results.$$
rm -v ftp_results.$$

rm -fv $File1 

	done

archive_clean $inbound_archive cartera*.csv $FileAge

echo -e "\nemail to MLR Team that files have been received from cartera"
Mail -s "File(s) are available on Seavvfile1 from cartera" $mail_to </dev/null

}

function outbound {

cd $outbound_dir

echo -e "\nprocessing cartera files"

echo -e "\nget file on $ftp_local_host" 
	ftp -v -i $ftp_local_host <<GETDATA >ftp_results.$$ 2>&1
        cd "mpprod/outbound/cartera"
	dir
	mget ALASKAAIR_EMAIL*.csv
        quit
GETDATA

cat ftp_results.$$
rm -f ftp_results.$$

	ls -1  ALASKAAIR_EMAIL*| while read File1
	do

securezip $File1 outbound
export pgp_remote_file=${File1}.pgp

echo -e "\nencrypt $data_file"
echo $PGPPASS | gpg --passphrase-fd 0 --batch -v -r "$pgp_remote_signature" --output $pgp_remote_file --encrypt $File1 >pgp_transcript.$$
	result=$?

	if [ $result -ne 0 ]; then
	echo -e "\nEncryption error on Alaska to Cartera file $outfilename,
	notify Systems Management during normal business hours\n"
	cat pgp_transcript.$$
	rm -fv pgp_transcript.$$
	exit 4
	fi

rm -fv pgp_transcript.$$

echo -e "\nput file $pgp_remote_file to $sftp_host"
	sftp -v $sftp_host <<PUTDATA >ftp_results.$$
        cd incoming
  	put $pgp_remote_file 
	ls -l
	quit
PUTDATA
	
	result=$?

	if [ $result -ne 0 ]; then
	echo "FTP put of $pgp_remore_file to cartera"
	cat ftp_results.$$
	rm ftp_results.$$
	exit 4
	fi

cat ftp_results.$$
rm -fv ftp_results.$$

echo -e "\nArchive file on $ftp_local_host" 
	ftp -v -i $ftp_local_host <<GETDATA >ftp_results.$$ 2>&1
        cd "mpprod/outbound/cartera/Archive"
        put $File1
        cd ..
        del "$File1"
        quit
GETDATA

	result=$?
	
	if [ $result -ne 0 ]; then
	echo -e "\narchive of file $File1 on $ftp_local_host failed.\n"
	cat ftp_results.$$
	rm -fv ftp_results.$$
	exit 4
	fi

cat ftp_results.$$
rm -fv ftp_results.$$ $File1 $pgp_remote_file

	done

#echo -e "\nemail to MLR Team that files have been put on the sever"
#Mail -s "File(s) are have been sent to Cartera " $mail_to </dev/null

archive_clean $outbound_archive ALASKA $FileAge

}

#!/bin/bash

# Set up the Fidelity data transfer environment
# This script is used by other scripts to preset values from a common source.

export PGPPASS=seavvdmzftp
export pgp_remote_signature="FIRSCo EDT RSA Legasy"
export BATCHMODE=yes          # Turn on non-prompted PGP encrypting
export ftp_host=ftpmro.fidelity.com
export data_fileo=scf02776.txt
export data_file=AAGBN015.txt
export data_file_crlf=AAGBN015.tmp
#export pgp_file=scf02776.test.txt.pgp  #TEST FILE
export pgp_file=$data_fileo.pgp
export outbound_dir=$HOME/outbound
export outbound_archive=${outbound_dir}.archive
export inbound_dir=$HOME/inbound
export inbound_archive=${inbound_dir}.archive
export hcmdir_in=/home/hcmprod/inbound/fidelity
export hcmdir_out=/home/hcmprod/outbound/fidelity
export lockfile=fidelity_pgp_encrypt.lock
export tagfile=fidelity.tag
export tagfile_out=AAGBN015.tag
export alert_recipient=dean.liebrich@alaskaair.com
export datestamp=`/bin/date +%b%d%Y.%H%M`
export info_to="dean.liebricha@alaskaair.com"
export errors_to="eps@alaskaair.com"
export logfile=$HOME/transfer_log
export FileAge=20
export ops=/opt/local/ops_scripts

. /opt/local/ops_scripts/function_lib

function outproc {

cd $outbound_dir

echo -e "get $data_file from $hcmdir_out"
cp $hcmdir_out/$data_file $outbound_dir

echo -e "\nrun add_crlf.pl script to create fidelity.dat"
crlf_add $data_file $data_file_crlf

securezip $data_file outbound

echo -e "\nencrypt $data_file_crlf"
echo $PGPPASS | gpg --passphrase-fd 0 --batch -v --sign -r "$pgp_remote_signature" --output $pgp_file --encrypt AAGBN015.tmp >gpg_transcript.$$

	result=$?

	if [ $result -ne 0 ]; then
	echo "fidelity data file encryption failure, contact Production Services."
	cat gpg_transcript.$$
	rm -f gpg_transcript.$$
  	exit 8
	fi

rm -f gpg_transcript.$$

ftp_vendor_chk $ftp_host 

ftp_vendor $ftp_host $pgp_file $pgp_file bin

data_records=`wc -l $data_file | awk '{print $1}'`
echo -e "\n$datestamp: there were $data_records records sent to fidelity" 

echo -e "\nRemove temp files"
rm -f $data_file $data_file_crlf $tagfile_out $hcmdir_out/$data_file $hcmdir_out/$tagfile_out

echo -e "\nMove encrypted file $pgp_file to the archive directory as $pgp_file.$datestamp"
mv $pgp_file $outbound_archive/$pgp_file$datestamp

archive_clean $outbound_archive $data_file $FileAge

}

function inproc {

cd $inbound_dir

ftp_vendor_chk $ftp_host 

ftp_vendor_get $ftp_host $remotefile $remotefile bin

echo $PGPPASS | gpg --passphrase-fd 0 --batch -v --output $localfile --decrypt $remotefile > gpg_transcript.$$

	result=$?

	if [ $result -gt 2 -o ! -f $localfile ]; then
	echo -e "\nfidelity data file encryption failure, contact Production Services.\n"
	cat gpg_transcript.$$
	rm -f gpg_transcript.$$
  	exit 8
	fi

rm -f gpg_transcript.$$

echo -e "\nMove $localfile to $hcmdir_in"
mv $localfile $hcmdir_in
touch $hcmdir_in/$tagfile

echo -e "\nMove encrypted file $remotefile to the archive directory as $remotefile.$datestamp"
mv $remotefile $inbound_archive/$remotefile.$datestamp

archive_clean $inbound_archive $remotefile $FileAge

}

#!/bin/bash

export PGPPASS=seavvdmzftp
export pgp_remote_sig="Premera Blue Cross"
export outbound_dir=$HOME/outbound
export outbound_archive=${outbound_dir}.archive
export inbound_dir=$HOME/inbound
export inbound_archive=${inbound_dir}.archive
export hcmbase=/home/hcmprod/
export hcmin_dir=${hcmbase}/inbound/premera
export hcmout_dir=${hcmbase}/outbound/premera
export alert_recipient=eps@alaskaair.com
export datestamp=`/bin/date +%b%d%Y.%H%M`
export info_to="dean.liebricha@alaskaair.com"
export errors_to="eps@alaskaair.com"
export FileAge=30

. /opt/local/ops_scripts/function_lib

function encrypt {

cd $outbound_dir

	if [ -s $pgp_data_file ]; then
	mv $pgp_data_file $outbound_archive/$pgp_data_file.$datestamp
echo -e "\nprevious encrypted file $pgp_data_file left in $outbound_dir\n"
	fi
 
echo -e "\ncopy $data_file from $hcmout_dir"
cp $hcmout_dir/$data_file $outbound_dir

	result=$?

	if [ $result -ne 0 -o ! -f $data_file ]; then
	echo -e "\ncopy of $data_file to $outbound_dir failed\n" 
	exit 8
	fi

echo -e "\nencrypt $data_file"
echo $PGPPASS | gpg --passphrase-fd 0 --batch -v --armor --sign -r "$pgp_remote_sig" --output $pgp_data_file --encrypt $data_file

	result=$?

	if [ $result -ne 0 -o ! -f $pgp_data_file ]; then
	echo -e "\n$data_file encryption failure\n" 
	exit 8
	fi

echo -e "\nput copy of $pgp_data_file in $outbound_archive"
cp $pgp_data_file $outbound_archive/$pgp_data_file.$datestamp

echo -e "\nremoving archived files older than $FileAge days"
	find $outbound_archive/$pgp_data_file* -mtime +$FileAge -print |
	while read FILE1
	do
	echo "removing file $FILE1"
	rm -f $FILE1
	done

echo -e "\nclean up $outbound_dir"
rm -fv $data_file $tagfile $hcmout_dir/$data_file 

}

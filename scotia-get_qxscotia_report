#!/bin/bash

# Process Horizon data from scotia, then upload to seavvfile1/ftpprod

# Set the environment variables
. $HOME/bin/scotia_environment

rm ~/.netrc
ln -s ~/.netrc.qxputfile ~/.netrc

cd $inbound_dir

	if [ -s $qxscotia_pgp_filer ]; then
	echo -e "\nprevious pgp encryption error on $qxscotia_pgp_filer"
	echo -e "notify EPS\n"
	ls -l
	exit 4
	fi

	echo -e "\ngetting file $qxscotia_new_filer from $ftp_host"
	ftp -v $ftp_host <<GETDATA >ftp_results.$$
	bin
	get $qxscotia_new_filer
	quit  
GETDATA

result=$?
succftp=`grep -c "Transfer complete" ftp_results.$$`

	if [ $succftp -ne 1 -o $result -ne 0 ]; then
	echo -e "\nFTP get of $qxscotia_new_filer from scotia failed."
	echo -e "Contact Production Services or EPS\n"
	cat ftp_results.$$
	rm ftp_results.$$
	exit 4
	fi

rm -f ftp_results.$$

echo -e "\nchange file extension to .pgp"
mv $qxscotia_new_filer $qxscotia_pgp_filer

echo "decrypt $qxscotia_pgp_filer" 
pgp $qxscotia_pgp_filer
    
result=$?

	if [ $result -ne 0 -o ! -s $qxscotia_pgp_filer ]; then
	echo -e "\nscotia inbound file decrypt problem.\n"
	exit 8
	fi

echo -e "\nmove $qxscotia_pgp_filer to archive directory and timestamp"
mv $qxscotia_pgp_filer $inbound_archive/$qxscotia_pgp_filer.$datestamp

echo -e "\nFTP $qxscotia_file to asprodftp"
        ftp -v asprodftp <<FTPDATA >ftp_results.$$
        cd PSFINFTP/AP/APPOSPAY
	ascii
	put $qxscotia_filer qxscotia-report.$outdate.txt
	quit

FTPDATA

result=$?
succftp=`grep -c "Transfer complete" ftp_results.$$`

	if [ $succftp -ne 1 -o $result -ne 0 ]; then
	echo -e "\nFTP of $qxscotia_filer to asprodftp failed."
	echo -e "Contact Production Services or EPS\n"
	cat ftp_results.$$
	rm ftp_results.$$
	exit 4
	fi

echo "Send mail notification to $infor_to"
Mail -s "The Horizon Scotia report has been sent to your server at `date`" $infor_to < $qxscotia_filer

rm -f ftp_results.$$

echo "remove temp files"
rm -f $qxscotia_filer ftp_results.* 

echo "removing archived files older than $FileAge days"
find $inbound_archive/ede* -mtime +$FileAge -print |
	while read FILE1
	do
	echo "removing file $FILE1"
	rm -f $FILE1
	done

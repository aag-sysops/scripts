#!/bin/bash

# Set up the alpa data transfer environment
# This script is used by other scripts to preset values from a common source.

export PGPPASS=seavvdmzftp
export pgp_remote_signature="ING Ftp Lockbox"
export ftp_host=io.reliastar.com
export outbound_dir=$HOME/outbound
export outbound_archive=${outbound_dir}.archive
export inbound_dir=$HOME/inbound
export inbound_archive=${inbound_dir}.archive
export hcmdir_in=/home/hcmprod/inbound/reliastar
export hcmdir_out=/home/hcmprod/outbound/reliastar
export alert_recipient=dean.liebrich@alaskaair.com
export datestamp=`/bin/date +%b%d%Y.%H%M`
export info_to="dean.liebricha@alaskaair.com"
export logfile=$HOME/transfer_log
export FileAge=20

export ops=/opt/local/ops_scripts

. /opt/local/ops_scripts/function_lib

ftp_vendor_chk $ftp_host

function outproc {

cd $outbound_dir

echo -e "\n****** remove files older than $FileAge from outbound ******"
	find ./${filepref}.asc -mtime +$FileAge -print |
	while read FILE1
	do
	rm -fv $FILE1
	done

echo -e "get $datafile from $hcmdir_out"
cp $hcmdir_out/$datafile $outbound_dir

echo $PGPPASS | gpg --passphrase-fd 0 --batch -v --sign -r "$pgp_remote_signature" --output $gpgfile --encrypt $datafile >gpg_transcript.$$

	result=$?

	if [ $result -ne 0 ]; then
	echo "`whoami` data file encryption failure, contact Production Services."
	cat gpg_transcript.$$
	rm -f gpg_transcript.$$
  	exit 8
	fi

rm -f gpg_transcript.$$

ftp_vendor $ftp_host $gpgfile $gpgfile bin

data_records=`wc -l $datafile | awk '{print $1}'`
echo -e "\n$datestamp: there were $data_records records sent to `whoami`" 

echo -e "\nRemove temp files"
rm -fv $hcmdir_out/$tagfile $hcmdir_out/$datafile $datafile

securezip $datafile outbound

archive_clean $outbound_archive $datafile $FileAge

}

function inproc {

cd $inbound_dir

ftp_vendor_get $ftp_host $pgpfile $pgpfile bin

	if [ ! -f $pgpfile ]; then
	echo -e "\nFTP get of $gpgfile failed, make sure file $rem_file
is available on Reliastar server, $ftp_host."
	exit 4
	fi

echo $PGPPASS | gpg --passphrase-fd 0 --batch -v --output $datafile --decrypt $pgpfile >gpg_transcript.$$

result=$?

	if [ $result -ne 0 -o ! -s $datafile ]; then
	echo "`whoami` data file decryption failure, contact Production Services."
	cat gpg_transcript.$$
	rm -f gpg_transcript.$$
  	exit 8
	fi

rm -f gpg_transcript.$$

echo -e "\ncopy $datafile to $hcmdir_in"
cp $datafile $hcmdir_in

result=$?

	if [ $result -ne 0 ]; then
	echo -e "\nCopy $localfile to $hcmdir_in failed, contact Production Services.\n"
  	exit 8
	fi

echo -e "\nCreate $tagfile"
touch $hcmdir_in/$tagfile 

echo -e "\nMove encrypted file $pgpfile $inbound_archive/$remotefile.$datestamp"
mv $pgpfile $inbound_archive/$pgpfile.$datestamp

rm -fv $datafile

archive_clean $inbound_archive $datafile $FileAge

}

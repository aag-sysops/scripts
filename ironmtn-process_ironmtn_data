#!/bin/bash


# 2015.02.05 - ironmtn is sending junk tag and .gpg files, disabled their access by changing password to stopironmtn
# 2015.02.17 - ironmtn fixed the problem with sending bad data.  Chgd the password back to it's original.  can be found in prod.ftp.parmlib or keepass.

# Set up the Iron Mountain data transfer environment

export PGPPASS=seavvdmzftp
export ftp_local_host=asprodftp #for Production
#export ftp_local_host=testftp   #for Testing 
export tag_file=Done_*.tag
export outbound_dir=$HOME/outbound
export outbound_archive=${outbound_dir}.archive
export inbound_dir=$HOME/inbound
export inbound_archive=${inbound_dir}.archive
export datestamp=`/bin/date +%b%d%Y.%H%M`
export email_to="legal.scan@alaskaair.com"
export FileAge=30

. /opt/local/ops_scripts/function_lib


######################################################################
export direction=$1

        if [ -z $direction ]; then
echo -e "\n     Missing direction parm.
        proper syntax is: process_ironmtn_data direction
        where direction equals IN\n"
        exit 4
        fi

case "$direction" in
        IN)

#Temporary sleep step added to ensure the data files *.pdf.gpg are all received 
#before processing continues.  tsonnen 6/19/2013   IM319515/IR050045
sleep 600

cd $inbound_dir

#call function to check connectivity $local_host (Seavvfile1).
ftp_check $ftp_local_host

ls -1 *.pdf.gpg > text.txt

#Run through this loop for each *.pdf.gpg file that is found in the inbound directory.
ls -1 *.pdf.gpg | while read FILE1
do
	# Define the variables of the files to be processed.
	export gpg_file=$FILE1
	export local_file=`echo $FILE1 | sed -e 's/.gpg//'`   #File name without the PGP  Should be something.pdf

	# Decrypt the encrypted file
	echo -e "\ndecrypt file $gpg_file"
	echo $PGPPASS | gpg --passphrase-fd 0 --batch --output $local_file --decrypt $gpg_file
	
	# FTP received file from inbound dir to SEAVVFILE1
	echo -e "\nCall function to push $local_file to $ftp_local_host (SEAVVFILE1)"
	ftp_file $ftp_local_host $local_file $local_file "cd Ironmtn/inbound" bin

	# Clean up inbound dir
	echo -e "\nMove $gpg_file to $inbound_archive/$gpg_file.$datestamp and remove $local_file and .tag file"
	mv $gpg_file $inbound_archive/$gpg_file.$datestamp
	rm $local_file
done

# Send email to users that the files have been received.
	Mail -s "`whoami` Iron Mtn scanned files received on `date`" $email_to < text.txt 

# Clean up inbound dir
	echo -e "\nRemove $tag_file and text.txt"
	rm -fv Done text.txt

# Call function 'archive_clean' to delete old archived files.
	archive_clean $inbound_archive $gpg_file $FileAge

	;;
esac

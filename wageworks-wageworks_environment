
#!/bin/bash

export PGPPASS=seavvdmzftp
export pgp_remote_signature="wageworks"
export BATCHMODE=yes          # Turn on non-prompted PGP encrypting
export ftp_host=ftp.wageworks.com
export outbound_dir=$HOME/outbound
export outbound_archive=${outbound_dir}.archive
export inbound_dir=$HOME/inbound
export inbound_archive=${inbound_dir}.archive
export hcmdir_in=/home/hcmprod/inbound/wageworks
export hcmdir_out=/home/hcmprod/outbound/wageworks
export datestamp=`/bin/date +%b%d%Y.%H%M`
export filedate=`/bin/date +%Y%m%d`
export data_file=PSF_28542.upd
export tagfile=PSF_28542.tag
export pgpfile=PSF_28542_${filedate}_wageworks.upd.pgp
export tagin=${local_file}.tag
export alert_recipient=joanne.gies@alaskaair.com
export info_to="joanne.gies@alaskaair.com"
export errors_to="joanne.gies@alaskaair.com"
export logfile=$HOME/transfer_log
export FileAge=20
export ops=/opt/local/ops_scripts

. /opt/local/ops_scripts/function_lib

function outproc {

cd $outbound_dir

echo -e "get $data_file from $hcmdir_out"
cp $hcmdir_out/$data_file $outbound_dir

echo -e "\nencrypt $data_file"
echo $PGPPASS | gpg --passphrase-fd 0 --batch -v -r "$pgp_remote_signature" --output $pgpfile --encrypt $data_file >gpg_transcript.$$

result=$?

	if [ $result -ne 0 ]; then
	echo "wageworks data file encryption failure, contact Production Services."
	cat gpg_transcript.$$
	rm -f gpg_transcript.$$
  	exit 8
	fi

rm -f gpg_transcript.$$

securezip $data_file outbound

ftp_vendor $ftp_host $pgpfile $pgpfile bin "cd psf"

archive_clean $outbound_archive .upd $FileAge

data_records=`wc -l $data_file | awk '{print $1}'`
echo -e "\n$datestamp: there were $data_records records sent to wageworks" 

echo -e "\nRemove temp files"
rm -f $data_file  $pgpfile $hcmdir_out/$data_file $hcmdir_out/$tagfile


}

function inproc {

cd $inbound_dir

	ls -1 WWCTR*.csv | while read File1
	do

echo -e "\nprocessing Wageworks $File1"

securezip $File1 inbound

echo -e "\nMove $File1 to $hcmdir_in"
mv $File1 $hcmdir_in/$File1
touch $hcmdir_in/${File1}.tag


	result=$?

	if [ $result -ne 0 -o -f $File1 ]; then
	echo -e "\nMove $File1 to $hcmdir_in failed, contact Production Services.\n"
  	exit 8
	fi

archive_clean $inbound_archive *.csv $FileAge

done

}

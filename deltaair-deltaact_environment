#!/bin/bash

# Set up the Delta Air Activity data transfer environment
# This script is used by other scripts to preset values from a common source.
# Usage: (in another script) ". $HOME/bin/deltaact_environment"

export PGPPASS=seavvdmzftp
export pgp_remote_signature="Delta_AlaskaAir"
export ftp_host=ftp.delta.com
export ftp_local_host=asprodftp
export lz=mpprod
export inbound_dir=$HOME/inbound
export inbound_archive=${inbound_dir}.archive
export outbound_dir=$HOME/outbound
export outbound_archive=${outbound_dir}.archive
export alert_recipient=eps@alaskaair.com
export out_data_file=ffmileage.txt
export out_pgp_file=${out_data_file}.pgp
export datestamp=`/bin/date +%Y%m%d`
export nofiledate=`/bin/date "+%A, %D"`
export local_file=DLDELTAAIRLINESPIT.txt
export MAILLIST="joanne.gies@alaskaair.com"
FileAge=30

. /opt/local/ops_scripts/function_lib

function inbound {

cd $inbound_dir

	if [ ! -f $data_pgp_file ]; then
	echo -e "\nexpected rewards data file ($data_pgp_file) not found\n"
	export MSG="There was no rewards file found for $nofiledate."
	echo $MSG
	echo $MSG | Mail -s "rewards Mileage Plan data" $MAILLIST
	exit 0
	fi

echo -e "decrypt $data_pgp_file"
echo $PGPPASS | gpg --passphrase-fd 0 --batch --output $local_file --decrypt $data_pgp_file    
	result=$?

	if [ $result -ne 0 ]; then
	echo -e "\n${program}: inbound results file decrypt problem.\n"
        exit 8
	fi

records=`wc $local_file | awk '{print $2}'`

	if [ $records -eq 0 ]; then
	export MSG="rewards data file for date $rundate is empty."
	echo -e "\n$MSG\n"
	echo $MSG | Mail -s "rewards Mileage Plan data" $MAILLIST
	mv $local_file $inbound_archive/$local_file.MT.$datestamp
	exit 0
	fi

echo -e "\n$local_file file ($records records) received at `date`"

securezip $local_file inbound

ftp_check $ftp_local_host
ftp_solar_in $ftp_local_host $local_file

echo -e "\ncleaning up inbound directory"
rm -f $local_file $data_pgp_file FFPDLAL.tag

archive_clean $inbound_archive $local_file $FileAge

}

function outbound {

rm ~/.netrc
ln -s ~/.netrc_mp ~/.netrc

cd $outbound_dir

securezip $out_data_file outbound

echo -e "\nencrypt $out_data_file"
echo $PGPPASS | gpg --passphrase-fd 0 --batch -v --armor -r "$pgp_remote_signature" --output $out_pgp_file --encrypt $out_data_file >pgp_transcript.$$ 2>&1
	
	result=$?

	if [ $result -ne 0 ]; then
	echo -e "\nEncryption error on Alaska to DELTA file $out_data_file,
	notify EPS during normal business hours\n"
	cat pgp_transcript.$$
	rm -fv pgp_transcript.$$
	exit 4
	fi

rm -fv pgp_transcript.$$

echo -e "\nput file $ffmileage_asc to $ftp_host"       
	ftp -v $ftp_host <<FTP> ftp_results.$$ 2>&1
	ascii
  	cd p_from_alsff2dl
        put $out_pgp_file FFPALDL
        ls -l
        quit
FTP
	result=$?

	if [ $result -ne 0 ]; then
	echo "ftp of $ffmileage_asc $ftp_host failed"
	cat ftp_debug.$$
	rm ftp_debug.$$
	exit 8
	fi

echo -e "remove local files in outbound"
rm $out_pgp_file $out_data_file $data_temp_file *.tag pgp*.*

archive_clean $outbound_archive ffm* $FileAge
archive_clean $outbound_archive ftp* $FileAge

}

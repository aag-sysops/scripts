#!/bin/bash

# Set up the workflow data transfer environment
# This script is used by other scripts to preset values from a common source.

export PGPPASS=seavvdmzftp
export ftp_local_host=asprodftp
#export ftp_local_host=testftp
export inbound_dir=$HOME/inbound
export inbound_archive=${inbound_dir}.archive
export outbound_dir=$HOME/outbound
export outbound_archive=${outbound_dir}.archive
export datestamp1=`/bin/date +%Y%m%d.%H%M%S`
export datestamp=`/bin/date +%Y%m%d`
export mailto="joanne.gies@alaskaair.com"
export logfile=$HOME/transfer_log
export FileAge=7

. /opt/local/ops_scripts/function_lib

function br_notices {

cd $outbound_dir

echo -e "\nget file on $ftp_local_host" 
	ftp -v -i $ftp_local_host <<GETDATA >ftp_results.$$ 2>&1
        bin
        cd "$filedir"
        dir
        mget $datafile*
        quit
GETDATA

	result=$?

	if [ $result -ne 0 ]; then
echo "get of $datafile on $ftp_local_host failed" | Mail -s "$program failure" $mail_to
cat ftp_results.$$
rm -fv ftp_results.$$
	fi

cat ftp_results.$$
rm -fv ftp_results.$$

echo -e "\nput file on Workflowone server" 
	sftp -v $sftp_host <<PUTDATA >ftp_results.$$ 2>&1
        cd "boardroom"
       	put $datafile
      	ls -l
       	quit
PUTDATA

cat ftp_results.$$
rm -fv ftp_results.$$

echo -e "\nArchive file on $ftp_local_host" 
	ftp -v -i $ftp_local_host <<GETDATA >ftp_results.$$ 2>&1
        cd "$filedir"/archive"
        bin
        put $datafile BR_Renewal_Notices_$datestamp1.csv
        cd ..
        del $datafile
        quit
GETDATA

	result=$?

	if [ $result -ne 0 ]; then
	echo "Archive of file $datafile on $ftp_local_host failed" | Mail -s "$program failure" $mail_to
	cat ftp_results.$$
	rm ftp_results.$$
	fi

cat ftp_results.$$
rm -fv ftp_results.$$

securezip $datafile outbound

echo -e "\nclean up outbound directory"
rm -fv $datafile

archive_clean $outbound_archive $datafile $FileAge

}

function cargo {

cd $outbound_dir

echo -e "\nget file(s) on $ftp_local_host" 
	ftp -v -i $ftp_local_host <<GETDATA >ftp_results.$$ 2>&1
        bin
        cd "$filedir"
	dir
      	mget *.pdf
        quit
GETDATA

cat ftp_results.$$
rm -f ftp_results.$$

echo -e "\nprocessing workflowone cargo files"

	ls -1 *.pdf | while read File1
	do

securezip $File1 outbound

echo -e "\nput cargo files on Workflowone server" 
	sftp -v $sftp_host <<PUTDATA >ftp_results.$$ 2>&1
        cd "cargo"
      	put $File1
        ls -l
        quit
PUTDATA

cat ftp_results.$$
rm -f ftp_results.$$

echo -e "\nArchive file on $ftp_local_host" 
	ftp -v -i $ftp_local_host <<GETDATA >ftp_results.$$ 2>&1
        cd "$filedir"/archive"
        bin
        put $File1 $File1.$datestamp.pdf
        cd ..
        del $File1
        quit
GETDATA

	result=$?

	if [ $result -ne 0 ]; then
	echo "Archive of file $datafile on $ftp_local_host failed" | Mail -s "$program failure" $mail_to
	cat ftp_results.$$
	rm ftp_results.$$
	fi

cat ftp_results.$$
rm ftp_results.$$

rm -fv $File1  pgp_transcript.$$

	done

archive_clean $outbound_archive ARhdq $FileAge

}

function awb {

cd $outbound_dir

echo -e "\nget file(s) on $ftp_local_host" 
	ftp -v -i $ftp_local_host <<GETDATA >ftp_results.$$ 2>&1
        bin
        cd "$filedir"
	dir
      	mget AWB*.csv
        quit
GETDATA

cat ftp_results.$$
rm -f ftp_results.$$

echo -e "\nprocessing workflowone cargo files"

	ls -1 AWB*.csv | while read File1
	do

securezip $File1 outbound

echo -e "\nput cargo files on Workflowone server" 
	sftp -v $sftp_host <<PUTDATA >ftp_results.$$ 2>&1
        cd "awb"
      	put $File1
        ls -l
        quit
PUTDATA

cat ftp_results.$$
rm -f ftp_results.$$

echo -e "\nArchive file on $ftp_local_host" 
	ftp -v -i $ftp_local_host <<GETDATA >ftp_results.$$ 2>&1
        cd "$filedir"/archive"
        bin
        put $File1 $File1.$datestamp.pdf
        cd ..
        del $File1
        quit
GETDATA

	result=$?

	if [ $result -ne 0 ]; then
	echo "Archive of file $datafile on $ftp_local_host failed" | Mail -s "$program failure" $mail_to
	cat ftp_results.$$
	rm ftp_results.$$
	fi

cat ftp_results.$$
rm ftp_results.$$

rm -fv $File1  pgp_transcript.$$

	done

archive_clean $outbound_archive ARhdq $FileAge

}


function bagtag {

cd $outbound_dir

ftp_check $ftp_local_host

echo -e "\ncheck connectivity to $sftp_host" 
	sftp -v alaskair@sftp.workflowone.com <<CHECK >ftp_results.$$
        quit
CHECK

	result=$?
	ftptest=`grep -c sftp ftp_results.$$`

	if [ $result -ne 0 -o $ftptest -lt 1 ]; then
	echo -e "\nunable to connect to $sftp_host\n"
	cat ftp_results.$$
	rm -fv ftp_results.$$
	exit 4
	fi

echo -e "\nconnectivity to $sftp_host confirmed, processing continues..."
rm -fv ftp_results.$$

echo -e "\nget file(s) on $ftp_local_host" 
	ftp -v -i $ftp_local_host <<GETDATA >ftp_results.$$ 2>&1
        cd "$filedir"
        bin
	dir
      	mget Bag*.csv
        quit
GETDATA

cat ftp_results.$$
rm -f ftp_results.$$

echo -e "\nprocessing workflowone bagtag files"

	ls -1 Bag*.csv | while read File1
	do

securezip $File1 outbound

echo -e "\nput BagTag files on Workflowone server" 
	sftp -v $sftp_host <<PUTDATA >ftp_results.$$ 2>&1
        cd "incoming"
      	put $File1
        ls -l
        quit
PUTDATA

cat ftp_results.$$
rm -f ftp_results.$$

echo -e "\nArchive file on $ftp_local_host" 
	ftp -v -i $ftp_local_host <<GETDATA >ftp_results.$$ 2>&1
        cd "$filedir"/archive"
        bin
        put $File1 $File1
        cd ..
        del $File1
        del $tag
        quit
GETDATA

	result=$?

	if [ $result -ne 0 ]; then
	echo "Archive of file $datafile on $ftp_local_host failed" | Mail -s "$program failure" $mail_to
	cat ftp_results.$$
	rm ftp_results.$$
	fi

cat ftp_results.$$
rm ftp_results.$$

rm -fv $File1  pgp_transcript.$$ 

	done

archive_clean $outbound_archive Bag  $FileAge

}

function cards {

cd $outbound_dir

echo -e "\nget file(s) on $ftp_local_host" 
	ftp -v -i $ftp_local_host <<GETDATA >ftp_results.$$ 2>&1
        bin
        cd "$filedir"
	dir
      	mget *.csv
        quit
GETDATA

cat ftp_results.$$
rm -fv ftp_results.$$

echo -e "\nprocessing workflowone cargo files"

	ls -1 *.csv | while read File1
	do

securezip $File1 outbound

echo -e "\nput cargo files on Workflowone server" 
	sftp -v $sftp_host <<PUTDATA >ftp_results.$$ 2>&1
        cd "cargo"
       	put $File1
        ls -l
       quit
PUTDATA

cat ftp_results.$$
rm -f ftp_results.$$

echo -e "\nArchive file on $ftp_local_host" 
	ftp -v -i $ftp_local_host <<GETDATA >ftp_results.$$ 2>&1
        cd "$filedir"/archive"
        bin
        put $File1
        cd ..
        del $File1
        quit
GETDATA

	result=$?

	if [ $result -ne 0 ]; then
	echo "Archive of file $datafile on $ftp_local_host failed" | Mail -s "$program failure" $mail_to
	cat ftp_results.$$
	rm ftp_results.$$
	fi

cat ftp_results.$$
rm ftp_results.$$


rm -f $File1  pgp_transcript.$$

	done

archive_clean $outbound_archive csv $FileAge

}



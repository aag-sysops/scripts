#!/bin/bash

export PGPPASS=seavvdmzftp
export ftp_local_host=asprodftp
export inbound_dir=$HOME/inbound
export inbound_archive=${inbound_dir}.archive
export outbound_dir=$HOME/outbound
export outbound_archive=${outbound_dir}.archive
export lz=mpprod
export nofiledate=`/bin/date "+%A, %D"`
export local_file=FL1800FLOWERSPIT.txt
export infile_prefix=FLOWERS_ALASKA
export outfile_prefix=FL1800FLOWERSPIT
export datestamp=`/bin/date +%b%d%Y.%H%M`
FileAge=20

. /opt/local/ops_scripts/function_lib

function inbound {

cd $inbound_dir

ftp_check $ftp_local_host

export data_file=`ls -1 $infile_prefix*.txt`
records=`wc $data_file | awk '{print $2}'`

echo -e "\n$data_file file ($records records) received at `date`"

securezip $data_file inbound

echo -e "\nrename $data_file to $local_file"
mv -fv $data_file $local_file

ftp_solar_in $ftp_local_host $local_file

echo -e "\ncleaning up inbound directory"
rm -fv $local_file

archive_clean $inbound_archive $infile_prefix $FileAge

}

function outbound {

cd $outbound_dir

echo -e "remove files older than 6 days"
find . -mtime +6 | xargs rm -v

ftp_check $ftp_local_host
ftp_solar_out $ftp_local_host $outfile_prefix

export solar_file=`ls -1 $outfile_prefix*`

securezip $solar_file outbound

echo -e "\ndelete handback files from $ftp_local_host"
	ftp -iv $ftp_local_host <<DEL >ftp_results.$$
	cd $lz/outbound/handback
	mdel $outfile_prefix*
	quit
DEL

cat ftp_results.$$
rm -fv ftp_results.$$

#ftp_delete $ftp_local_host $solar_file "cd $lz/outbound/handback"

#echo -e "\nemail to 1800-flowers that the handback file $out_pgp_file is ready, please delete after pickup"
#Mail -s "Hello - Handback file $out_pgp_file is now on our server, please delete after picking up" $mail_to </dev/null

}

direction=$1

#make sure direction parm was passed in as first arg
        if [ -z $direction ]; then
echo -e "\n     Missing direction parm.
        proper syntax is: process_diners_file direction where
        direction equals in or out\n"
        exit 4
        fi

case "$direction" in

        in)

echo -e "\nBegin processing for `whoami` inbound processing"
inbound
echo -e "\nEnd of `whoami` inbound processing"

        ;;

        out)

echo -e "\nBegin processing for `whoami` outbound processing"
outbound
archive_clean $outbound_archive $outfile_prefix $FileAge
echo -e "\nEnd of `whoami` outbound processing"

        ;;

esac

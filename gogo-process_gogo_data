#!/bin/bash

set -x

# Set up the GOGO data transfer environment

export PGPPASS=seavvdmzftp
export sftp_host=alaskaairlines@ftp.gogoair.com
export ftp_local_host=asprodftp
export outbound_dir=$HOME/outbound
export outbound_archive=${outbound_dir}.archive
export inbound_dir=$HOME/inbound
export inbound_archive=${inbound_dir}.archive
export lzout_dir=mande/gogoperiodicFeed
export lzout_archive=mande/gogoperiodicFeed/archive
export alert_recipient=joanne.gies@alaskaair.com
export filepref=GogoFlightSchedule
export datestamp=`/bin/date "+%Y%m%d"`
#export infor_to="joanne.gies@alaskaair.com"
export logfile=$HOME/transfer_log
export FileAge=20

export ops=/opt/local/ops_scripts

. /opt/local/ops_scripts/function_lib

ftp_vendor_get $ftp_local_host $filepref "cd mande/gogoperiodicFeed"

ls -1 ${filepref}*.txt |
	while read FILE1
	do
	export datafile=$FILE1
	export tagfile=`echo $FILE1 | sed -e 's/csv/tag/'`


securezip $datafile outbound 

cd $outbound_dir


export remotefile=`echo $FILE1 | sed -e 's/.csv//'`


data_records=`wc -l $datafile | awk '{print $1}'`



echo -e "\nput  $outfile to GoGo server" 
	sftp -v $sftp_host <<GETDATA >ftp_results.$$ 2>&1
        cd $dir
       	put $outfile $outfile
        quit
GETDATA

cat ftp_results.$$
rm -fv ftp_results.$$

data_records=`wc -l $outfile | awk '{print $1}'`
echo -e "\n$datestamp: there were $data_records records sent to Gogo" 


#echo -e "\nRemove $datafile and $tagfile"
rm -fv $datafile $tagfile
rm $outfile $datafile

	done

ftp_delete $ftp_local_host $remote_file "cd mpprod/bankcardupdate/handback"

archive_clean outbound $basename $FileAge






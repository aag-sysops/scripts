#!/bin/bash

program=`basename $0`

export BASH_ENV=$HOME/.bashrc
export RUNTIMEPATH=/usr/local/TDAccess2.2
export LD_LIBRARY_PATH=/usr/local/TDAccess2.2
export ftp_host=asprodftp   #PROD
#export ftp_host=testftp     #TEST
export outbound_dir=$HOME/outbound
export outbound_archive=${outbound_dir}.archive
export inbound_dir=$HOME/inbound
export inbound_archive=${inbound_dir}.archive
export filepref=bof
export intag_file=bof.tag
#export filedate=`date +%Y%m%d`
export datestamp=`/bin/date +%b%d%Y.%H%M`
export filepref=bof
export ops=/opt/local/ops_scripts
export FileAge=15

. /opt/local/ops_scripts/function_lib

cd $inbound_dir

	if [ ! -f encrypt.key ]; then
ln -s /usr/local/TDAccess2.2/keys/sabreftp/encrypt.key encrypt.key
	fi

export data_cmp_file=`ls -1 ${filepref}*.cmp`
export data_file=`echo $data_cmp_file | sed -e 's/cmp/dat/' | cut -c1-12,18-21`
#export data_file=`echo $data_cmp_file | sed -e 's/cmp/dat/'`
export tag_file=`echo $data_cmp_file | sed -e 's/cmp/tag/' | cut -c1-12,18-21`
#export tag_file=`echo $data_cmp_file | sed -e 's/cmp/tag/'`

ftp_check $ftp_host

echo -e "\nput copy of $data_cmp_file in $inbound_archive"
cp $data_cmp_file $inbound_archive

	result=$?

	if [ $result -ne 0 ]; then
MSG="archiving of file $data_cmp_file failed"
echo -e "\n$MSG, Open trouble ticket and assign to Systems Mgmt."
exit 4
	fi	

echo -e "\ndecompress $data_cmp_file to $data_file"
echo $data_cmp_file | decompx $data_file
	
	result=$?

	if [ $result -ne 0 ]; then
MSG="decompress failure of file $data_cmp_file"
echo -e "\nfile system space is at `df -h /ftphome | awk '{print $5}'`\n"
cat decomp.log
rm -fv decomp.log
echo -e "\n$MSG, Open trouble ticket and assign to Systems Mgmt."
exit 4
	fi

ftp_file $ftp_host $data_file $data_file "cd BI/Baggage"
ftp_file $ftp_host $intag_file $tag_file "cd BI/Baggage"

echo -e "\ndo cleanup"
rm -fv $data_file decomp.log $intag_file $data_cmp_file

archive_clean $inbound_archive ${filepref}* $FileAge

#!/bin/bash

export PGPPASS=seavvdmzftp
export pgp_remote_signature="QANTAS Airways (Alaskan) Frequent Flyer Data Interfaces Key"
export ftp_host=139.163.83.60
#export ftp_local_host=asprodftp
export ftp_local_host=testftp
export lz=mptest
export inbound_dir=$HOME/inbound
export inbound_archive=${inbound_dir}.archive
export outbound_dir=$HOME/outbound
export outbound_archive=${outbound_dir}.archive
export alert_recipient=dean.liebrich@alaskaair.com
export datestamp=`/bin/date +%Y%m%d`
export nofiledate=`/bin/date "+%A, %D"`
export QANTAS_MAILLIST="loyaltyoperation@qantas.com.au,loyaltysupport@qantas.com.au"
export FileAge=30
export nofiledate=`/bin/date "+%A, %D"`
export ops=/opt/local/ops_scripts

. /opt/local/ops_scripts/function_lib

function outproc {

cd $outbound_dir

ftp_check $ftp_local_host
ftp_check $ftp_host

echo -e "\nget file from $ftp_local_host"
	ftp -iv $ftp_local_host <<GETDATA > ftp_results.$$
	cd $filedir
	mget $file_pref*
GETDATA
	result=$?

	if [ $result -ne 0 ]; then
	echo -e  "\nftp get file from $ftp_local_host failed, contact EPS"
	cat ftp_results.$$
	rm -v ftp_results.$$
	exit 4
	fi

	cat ftp_results.$$
	rm -v ftp_results.$$

set -x

export data_file=`ls -1 $file_pref*`
export crlf_file=`echo $data_file | sed -e 's/.txt/.crlf/'`
export temp_file=`echo $data_file | sed -e 's/.txt/.tmp/'`
export pgp_file=`echo $data_file | sed -e 's/.txt/.pgp/'`

mv -v $data_file $crlf_file

#replace record terminator crlf (wintel) with newline (unix)
crlf_rem $crlf_file $temp_file

echo -e "\nmake record length 300 for all records"
$HOME/bin/300.pl $temp_file > $data_file
	
	result=$?

	if [ $result -ne 0 ]; then
	echo -e  "\nchange record length failed, contact EPS"
	exit 4
	fi

echo $PGPPASS | gpg --passphrase-fd 0 --batch -v --sign -r "$pgp_remote_signature" --text --output $pgp_file --encrypt $data_file >pgp_transcript.$$

ftp_vendor $ftp_host $pgp_file $pgp_file bin "cd upload"

securezip $data_file outbound

rm -fv $data_file $pgp_file $crlf_file pgp_transcript.$$

#do we need to archive/delete file on asprodftp

archive_clean $outbound_archive $file_pref $FileAge

}

function inproc {

set -x

cd $inbound_dir

#ftp_vendor_get $ftp_host $data_pgp_file "cd upload"

echo -e "\nget file on qantas server" 
	ftp -iv $ftp_host <<GETDATA >ftp_results.$$ 2>&1
        cd upload
        dir
       	mget $file_pref*.PGP
        quit
GETDATA

	result=$?

	if [ $result -ne 0 ]; then
	echo "FTP get of $data_pgp_file failed"
	cat ftp_results.$$
	rm ftp_results.$$
	exit 4
	fi

cat ftp_results.$$
rm -fv ftp_results.$$

export data_pgp_file=`ls -1 $file_pref*.PGP`
export data_file=`echo $data_pgp_file | sed -e 's/PGP/txt/'`
export filecnt=`ls -1 | grep -c $data_pgp_file`

#	if [ $filecnt -lt 1 ]; then
#echo -e "\nThere was no $data_pgp_file, please try again later\n"
#	exit 4
#	fi

echo -e "decrypt $data_pgp_file"
echo $PGPPASS | gpg --passphrase-fd 0 --batch --output $data_file --decrypt $data_pgp_file
  
	result=$?

	if [ $result -ne 0 ]; then
	echo "${program}: inbound results file decrypt problem.  Call Ops Analyst."
        exit 8
	fi

ftp_vendor $ftp_local_host $data_file $data_file "cd $filedir"

echo -e "\nDelete file on qanats server" 
	ftp -v $ftp_host <<RENMDATA >ftp_results.$$ 2>&1
        cd upload
        rm $data_pgp_file
        quit
RENMDATA

	result=$?

	if [ $result -ne 0 ]; then
echo -e "\nDelete of file $ata_pgp_file on $ftp_host failed"
	cat ftp_results.$$
	rm -fv ftp_results.$$
	exit 4
	fi

echo -e "\ncleaning up inbound directory"
mv -v $data_pgp_file $inbound_archive
rm -fv $data_file $data_pgp_file

archive_clean $inbound_archive $file pref $FileAge

}

direction=$1

#make sure direction parm was passed in as first arg
        if [ -z $direction ]; then
echo -e "\n     Missing argument.
        proper syntax is: process_retrocredit_data direction where
        direction equals retro_in, retro_out, response_in, or response_out\n"
        exit 4
        fi

case "$direction" in 

        retro_in)
export file_pref=qantasqueries
export data_pgp_file=${data_file}.pgp
export filedir=mptest/retrocredit/OALquery/QF
echo -e "\nBegin processing for retro in file"
inproc
echo -e "\nProcessing for qantas retro file in complete"
        ;;

        retro_out)
export file_pref=ASQuery_QF
export filedir=mptest/retrocredit/ASQuery/QF
echo -e "\nBegin processing for retro in file"
outproc
echo -e "\nProcessing for qantas retro file in complete"
        ;;

        response_in)
export file_pref=ASResponse_QF_00463
export filedir=mptest/retrocredit/ASResponse/QF
echo -e "\nBegin processing for handback in file"
inproc
echo -e "\nProcessing for JL on AS Retropost in complete"
        ;;

        response_out)
export file_pref=QantasResponses_ASsend
export filedir=mptest/retrocredit/OALesponse/QF
echo -e "\nBegin processing for handback in file"
outproc
echo -e "\nProcessing for JL on AS Retropost in complete"
        ;;

esac


#!/bin/bash

set -x

# Set up the tdbank data transfer environment
# This script is used by other scripts to preset values from a common source.

export ftp_local_host=asprodftp
#export ftp_local_host=testftp
#export sftp_host=XM0DRY01@mfttisp.td.com
#export sftp_host=XM0FYN01@mfttisa.td.com
export sftp_host=XM0FYN01@mfttisp.td.com
export dir=MBIF0FYN
export lz=mpprod
#export lz=mptest
export inbound_dir=$HOME/inbound
export inbound_archive=${inbound_dir}.archive
export outbound_dir=$HOME/outbound
export outbound_archive=${outbound_dir}.archive
export datestamp=`/bin/date +%b%d%Y.%H%M`
#export MAILLST="ftp.partner.alerts@alaskaair.com"
#export info_to="joanne.gies@alaskaair.com"
export nofiledate=`/bin/date "+%A, %D"`
FileAge=20

. /opt/local/ops_scripts/function_lib

export file=$1

#make sure file parm was passed in as first arg
        if [ -z $file ]; then
echo -e "\n     Missing file parm.
        proper syntax is: process_tdbank_data  where
        file equals enrollment_in or enrollment_out or accrual_in or accrual out\n"
        exit 4
        fi

function inproc {

cd $inbound_dir

ftp_check $ftp_local_host

export local_file=`ls -1 $in_file_pref*`

records=`wc $local_file | awk '{print $2}'`
echo -e "\ntdbank file $file_name ($records records) received at `date`"

securezip $local_file inbound

#ftp_vendor $ftp_local_host $local_file $local_file "cd MPPROD/SOLARPartnerTxn"

ftp_solar_in $ftp_local_host $local_file

echo "remove temp files"
rm -fv $local_file 
errorchk $? "remove files from $inbound_dir"

echo -e "send confirmation email to BOA"
echo -e "$local_file file has been sent to Alaska Airlines from TDBank.
Thank You." | mutt -s "$local_file Received $datestamp" $info_to 

archive_clean $inbound_archive $in_file_pref $FileAge

}


function outproc {

cd $outbound_dir

ftp_check $ftp_local_host

echo -e "\ncheck for ftp connectivity to $sftp_host"
	sftp -v -o port=10022 $sftp_host <<TEST >ftp_results.$$
	pwd
	bye
TEST

ftptest=`grep -i -c -e "Remote working directory" ftp_results.$$`

	if [ $ftptest -lt 1 ]; then
echo -e "\nUNABLE TO OPEN SFTP SESSION TO $sftp_host\n"
	cat ftp_results.$$
	rm -v ftp_results.$$
	exit 4
	else

echo -e "\nconnection to $sftp_host confirmed, processing continues...\n"
rm -v ftp_results.$$
	fi
rm -fv ftp_results.$$

echo -e "\nget file on $ftp_local_host" 
	ftp -v -i $ftp_local_host <<GETDATA >ftp_results.$$ 2>&1
        cd "MPPROD/outbound/Handback"
	dir
      	mget MBNACREDITCARDACTIVITY*.txt
        quit
GETDATA

cat ftp_results.$$
rm -fv ftp_results.$$

echo -e "\nprocessing tdbank files"

	ls -1 MBNACREDITCARDACTIVITY* | while read File1
	do

securezip $File1 outbound

echo -e "\nThis is the activty file name" $File1


echo -e "\nput $data_file to $sftp_host"
       sftp -v -o port=10022 $sftp_host <<PUTDATA>ftp_results.$$
       cd $dir
       put $File1 $File1
       dir
       bye
PUTDATA

	result=$?

	if [ $result -ne 0 ]; then
	echo "SFTP put of $File1 to TDBANK failed, contact Systems Management"
	cat ftp_results.$$
	rm -v ftp_results.$$
	exit 4
	fi

cat ftp_results.$$
rm -fv ftp_results.$$

echo -e "\nArchive file on $ftp_local_host" 
	ftp -v -i $ftp_local_host <<GETDATA >ftp_results.$$ 2>&1
        cd "MPPROD/outbound/Handback
        del "$File1"
        quit
GETDATA

	result=$?
	if [ $result -ne 0 ]; then
	echo -e "\narchive of file $File1 on $ftp_local_host failed.\n"
	cat ftp_results.$$
	rm -fv ftp_results.$$
	exit 4
	fi

rm -fv $File1 ftp_results.$$

      done

archive_clean $outbound_archive TDBANK $FileAge

echo -e "\nRemove temp files"

#echo -e "\nemail to tdbank that the handback file is ready"
#Mail -s "Handback file is now on our server, please delete after picking up $datestamp" $mail_to </dev/null

}

case "$file" in

       accrual_in)

export in_file_pref=MBNACREDITCARDACTIVITY
echo -e "\nBegin processing for accrual in file"
inproc
echo -e "\nProcessing for MBNA ACcrual in complete"
        ;;

       accrual_out)

echo -e "\nBegin processing for accrual in file"
outproc
echo -e "\nProcessing for MBNA Accrual out complete"
        ;;

esac

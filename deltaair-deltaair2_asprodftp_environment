#!/bin/bash

# Check for , decrypt, archive and send file to Seavvfile1.
# This script is used by other scripts to preset values from a common source.
# Usage: (in another script) ". $HOME/bin/deltaact_environment"

export PGPPASS=seavvdmzftp
#export pgp_remote_signature="Delta_AlaskaAir"
export BATCHMODE=yes          # Turn on non-prompted PGP encrypting
export ftphost_local=asprodftp
export lz=mpprod
export inbound_dir=$HOME/inbound
export inbound_archive=${inbound_dir}.archive
export outbound_dir=$HOME/outbound
export outbound_archive=${outbound_dir}.archive
export outdate=`/bin/date +%b%y`
export datestamp=`/bin/date +%Y%m%d`
export nofiledate=`/bin/date "+%A, %D"`
export MAILLIST="joanne.gies@alaskaair.com"
FileAge=30

. /opt/local/ops_scripts/function_lib

cd $inbound_dir

function inbound {

echo -e "decrypt $data_pgp_file"
echo $PGPPASS | gpg --passphrase-fd 0 --batch --output $local_file --decrypt $data_pgp_file    
	result=$?

	if [ $result -ne 0 ]; then
	echo -e "\n${program}: inbound results file decrypt problem.\n"
        exit 8
	fi
echo $local_file

if [ $result -ne 0 ]; then
echo "Delta Air $local_file decrypt problem.  Call Ops Analyst"
	exit 4
fi

#put the file
echo "put the $local_file file to asprodftp" 
ftp -v $ftphost_local <<PUTDATA >ftp_results.$$
  ascii
  cd "mplan\balancing\Delta_Detail"
  put $local_file $local_file.$outdate.txt
  bye
PUTDATA

succftp=`grep -c "Transfer complete" ftp_results.$$`

if [ $succftp -eq 1 ]; then
echo "ftp of $local_file successful"
rm -f ftp_results.$$
fi
echo -e "\n$local_file file ($records records) received at `date`"

securezip $local_file inbound

echo -e "\ncleaning up inbound directory"
rm -f $local_file $data_pgp_file *.tag redempt.tag

archive_clean $inbound_archive $local_file $FileAge

}

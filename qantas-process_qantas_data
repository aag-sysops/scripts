#!/bin/bash

export PGPPASS=seavvdmzftp
export pgp_remote_signature="QANTAS Airways (Alaskan) Frequent Flyer Data Interfaces Key"
export ftp_host=139.163.83.60
export ftp_local_host=asprodftp
#export ftp_local_host=testftp
export lz=mpprod
export inbound_dir=$HOME/inbound
export inbound_archive=${inbound_dir}.archive
export outbound_dir=$HOME/outbound
export outbound_archive=${outbound_dir}.archive
export alert_recipient=dean.liebrich@alaskaair.com
#export datestamp=`/bin/date +%b%d%Y.%H%M`
export datestamp=`/bin/date +%Y%m%d`
export nofiledate=`/bin/date "+%A, %D"`
export airpac_local_file=FJAirPacific.txt
export QANTAS_MAILLIST="QF.Loyalty@techmahindra.com,loyaltysupport@qantasloyalty.com"
export AIRPAC_MAILLIST="QF.Loyalty@techmahindra.com,loyaltysupport@qantasloyalty.com"
#export AIRPAC_MAILLIST="loyaltyoperation@qantas.com.au,loyaltysupport@qantas.com.au"
export FileAge=30

. /opt/local/ops_scripts/function_lib

direction=$1

#make sure direction parm was passed in as first argprocess_qantas_data.new
        if [ -z $direction ]; then
echo -e "\n     Missing direction parm.
        proper syntax is: process_qantas_file direction where
        direction equals in or out\n"
        exit 4
        fi

function inbound {

cd $inbound_dir

	if [ ! -f $data_pgp_file ]; then
	echo -e "\nexpected qantas data file ($data_pgp_file) not found\n"
	export MSG="Alaska Airlines did not receive their weekly Mileage Plan file $data_pgp_file for $nofiledate.  Please investigate."
	echo $MSG
	echo $MSG | Mail -s "Alaska Airlines missing Qantas Mileage Plan data" $QANTAS_MAILLIST
	exit 0
	fi

echo -e "decrypt $data_pgp_file"
echo $PGPPASS | gpg --passphrase-fd 0 --batch --output $local_file --decrypt $data_pgp_file    
	
	result=$?

	if [ $result -ne 0 ]; then
	echo "${program}: inbound results file decrypt problem.  Call Ops Analyst."
        exit 8
	fi

records=`wc $local_file | awk '{print $2}'`

	if [ $records -eq 0 ]; then
	export MSG="Alaska Airlines received an empty Mileage Plan file $data_pgp_file for $nofiledate.  Please investigate."

	echo -e "\n$MSG\n"
	echo $MSG | Mail -s "Alaska Airlines empty Qantas Mileage Plan file" $QANTAS_MAILLIST
	mv $local_file $inbound_archive/$local_file.MT.$datestamp
	exit 0
	fi

#echo -e "\n$local_file file ($records records) received at `date`"

securezip $local_file inbound

ftp_check $ftp_local_host
ftp_solar_in $ftp_local_host $local_file

echo -e "\ncleaning up inbound directory"
rm -fv $local_file $data_pgp_file

archive_clean $inbound_archive $local_file $FileAge

}

function hb_inbound {

cd $inbound_dir

echo -e "\nget $file_prefix from $ftp_host"
	ftp -v $ftp_host <<DATA >ftp_results.$$
	cd upload
	mget $file_prefix*.pgp
	dir
	quit
DATA

errorchk $? "get $file_prefix from $ftp_host"

export data_pgp_file=`ls -1 $file_prefix*.pgp`
export data_file=`echo $data_pgp_file | sed -e 's/pgp/txt/'`

echo -e "decrypt $data_pgp_file"
echo $PGPPASS | gpg --passphrase-fd 0 --batch --output $data_file --decrypt $data_pgp_file    

	result=$?

	if [ $result -gt 2 ]; then
	echo "${program}: inbound results file decrypt problem.  Open incident to Sys Ops."
        exit 8
	fi

securezip $data_file inbound

ftp_check $ftp_local_host
ftp_vendor_put $ftp_local_host $data_file $data_file "cd $in_file_dir"

echo -e "\ncleaning up inbound directory"
rm -f $data_file $data_pgp_file

archive_clean $inbound_archive $file_pref $FileAge

}

function outbound {

cd $outbound_dir

echo $PGPPASS | gpg --passphrase-fd 0 --batch -v --sign -r "$pgp_remote_signature" --text --output $out_pgp_file --encrypt $out_data_file >pgp_transcript.$$
	
	result=$?

	if [ ! -s $out_pgp_file -o $result -ne 0 ]; then
	echo -e "\n$out_data_file encryption failure, contact Production Analyst" 
	cat pgp_transcript.$$
	rm pgp_transcript.$$
	exit 4
	fi

ftp_vendor $ftp_host $out_pgp_file $out_pgp_file bin "cd upload" 

securezip $out_data_file outbound

echo -e "\nremove local files in outbound"
rm -f $out_pgp_file $out_data_file pgp_transcript.$$ 

archive_clean $outbound_archive $out_data_file $FileAge

}

function hb_outbound {

cd $outbound_dir

echo -e "\nget file $rem_file from $ftp_local_host"
	ftp -v $ftp_local_host <<DATA >ftp_results.$$
	cd $out_file_dir
	mget $file_prefix*
	dir
	quit
DATA

errorchk $? "get file from $local_host"

export local_file=`ls -1 $file_prefix*`
export out_pgp_file=`echo $local_file.pgp`

securezip $local_file outbound

echo $PGPPASS | gpg --passphrase-fd 0 --batch -v --sign -r "$pgp_remote_signature" --text --output $out_pgp_file --encrypt $local_file >pgp_transcript.$$
	
	result=$?

	if [ $result -ne 0 ]; then
	echo -e "\n$out_data_file encryption failure, contact Production Analyst" 
	cat pgp_transcript.$$
	rm -v pgp_transcript.$$
	exit 4
	fi

ftp_vendor $ftp_host $out_pgp_file $out_pgp_file bin "cd upload" 

echo -e "\nremove local files in outbound"
rm -fv $out_pgp_file $out_data_file pgp_transcript.$$ 

archive_clean $outbound_archive $out_data_file $FileAge

}

function airpac_in {

cd $inbound_dir

	if [ ! -f $data_pgp_file ]; then
	echo -e "\nexpected Air Pacific data file ($data_pgp_file) not found\n"
	export MSG="Alaska Airlines did not receive their weekly Mileage Plan file $data_pgp_file for $nofiledate.  Please investigate."
	echo $MSG
	echo $MSG | Mail -s "Air Pacific missing Mileage Plan data" $AIRPAC_MAILLIST
	exit 0
	fi

echo -e "decrypt $data_pgp_file"
echo $PGPPASS | gpg --passphrase-fd 0 --batch --output $airpac_local_file --decrypt $data_pgp_file    
	result=$?

	if [ $result -ne 0 ]; then
	echo "${program}: inbound results file decrypt problem.  Open ticket for Systems Mgmt."
        exit 8
	fi

records=`wc $airpac_local_file | awk '{print $2}'`

	if [ $records -eq 0 ]; then
	export MSG="Alaska Airlines received an empty Mileage Plan file $data_pgp_file for $nofiledate.  Please investigate."
	echo -e "\n$MSG\n"
	echo $MSG | Mail -s "Alaska Airlines empty Air Pacific Mileage Plan file" $AIRPAC_MAILLIST
	mv $airpac_local_file $inbound_archive/$airpac_local_file.AIRPAC.$datestamp
	exit 0
	fi

echo -e "\n$airpac_local_file file ($records records) received at `date`"

securezip $airpac_local_file inbound

ftp_check $ftp_local_host
ftp_solar_in $ftp_local_host $airpac_locprocess_qantas_data.newal_file

echo -e "\ncleaning up inbound directory"
rm -f $airpac_local_file $data_pgp_file

archive_clean $inbound_archive $airpac_local_file $FileAge

}

case "$direction" in

        in)
export data_pgp_file=qantasmiles.pgp
export local_file=QFQANTASAIRWAYSPIT.txt
echo -e "\nBegin processing for `whoami` inbound processing"
inbound
echo -e "\nEnd of `whoami` inbound processing"
        ;;

        out)
export out_data_file=alaskamiles
export out_pgp_file=${out_data_file}.pgp

echo -e "\nBegin processing for `whoami` outbound processing"
outbound
echo -e "\nEnd of `whoami` outbound processing"
        ;;

        hb_in)
export in_file_dir=MPPROD/Inbound/Handback
export file_prefix=ASHandback_QF
echo -e "\nBegin processing for `whoami` inbound processing"
hb_inbound
echo -e "\nEnd of `whoami` inbound processing"
        ;;

        hb_out)
export out_file_dir=MPPROD/Outbound/Handback
#export out_file_dir=MPTEST/Outbound/Handback
export file_prefix=QFQANTASAIRWAYSPIT

echo -e "\nBegin processing for `whoami` outbound processing"
hb_outbound
echo -e "\nEnd of `whoami` outbound processing"
        ;;

esac

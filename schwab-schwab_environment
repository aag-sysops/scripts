#!/bin/bash

# Set up the schwab data transfer environment
# This script is used by other scripts to preset values from a common source.
# Usage: (in another script) ". $HOME/bin/schwab_environment"
 
export PGPPASS=seavvdmzftp
#export pgp_remote_signature="Schwab-AKA-SEA"
export pgp_remote_signature="Schwab-AKA-SEA-dh"
#export sftp_host=Schwab-AKA-SEA@sft-test.schwab.com
export sftp_host=Schwab-AKA-SEA@sft.schwab.com
export outbound_dir=$HOME/outbound
export outbound_archive=${outbound_dir}.archive
export inbound_dir=$HOME/inbound
export inbound_archive=${inbound_dir}.archive
export hcmdir_in=/home/hcmprod/inbound/schwab
export hcmdir_out=/home/hcmprod/outbound/schwab
export hcmdir_out2aon=/home/hcmprod/outbound/aon_hewitt
export datestamp=`/bin/date +%b%d%Y.%H%M`
export datestamp_rem=`/bin/date +%m%d%Y`
export info_to="joanne.gies@alaskaair.com"
export logfile=$HOME/transfer_log
export FileAge=20
export ops=/opt/local/ops_scripts

. /opt/local/ops_scripts/function_lib

function getname {

cd $hcmdir_out

export data_file=`ls -1 $data_file_pref*.txt`
export tagfile=`echo $data_file | sed -e 's/txt/tag/'`

}

function outproc {

cd $outbound_dir

cp $hcmdir_out/$data_file $outbound_dir
errorchk $? "copy $data_file to $outbound_dir"

echo -e "\nprocessing $whoami $data_file"

securezip $data_file outbound

data_records=`wc -l $data_file | awk '{print $1}'`

echo -e "\nencrypt $data_file"
echo $PGPPASS | gpg --passphrase-fd 0 --batch -v -r "$pgp_remote_signature" --output $outfile --encrypt $data_file >gpg_transcript.$$

	result=$?

	if [ $result -ne 0 ]; then
	echo "Schwab data file encryption failure, contact Production Services."
	cat gpg_transcript.$$
	rm -fv gpg_transcript.$$
  	exit 8
	fi

rm -fv gpg_transcript.$$

sftp -v $sftp_host <<PUT >ftp_results.$$
cd inbound
put $outfile
bye
PUT

cat ftp_results.$$
rm -v ftp_results.$$

errorchk $? "sftp $outfile to $sftp_host"

echo -e "\n$datestamp: there were $data_records records sent to schwab"

archive_clean $outbound_archive $data_file_pref $FileAge

echo -e "\nRemove temp files"
rm -fv $data_file $hcmdir_out/$data_file $hcmdir_out/$tagfile $outfile

}

function inproc {

cd $inbound_dir

sftp -v $sftp_host <<PUT >ftp_results.$$
cd outbound
get $pgp_infile
bye
PUT

errorchk $? "sftp $outfile to $sftp_host"

echo $PGPPASS | gpg --passphrase-fd 0 --batch -v --output $local_file --decrypt $pgp_infile >gpg_transcript.$$

	result=$?

	if [ $result -ne 0 -o ! -f $local_file ]; then
	echo -e "\nschwab data file encryption failure, contact Production Services.\n"
	cat gpg_transcript.$$
	rm -fv gpg_transcript.$$
  	exit 8
	fi

rm -fv gpg_transcript.$$

securezip $local_file inbound

echo -e "\nArchive  $pgp_infile on Schwab server" 
sftp -v $sftp_host <<GETDATA >ftp_results.$$ 2>&1
cd outbound
dir
rm $pgp_infile 
quit
GETDATA

	result=$?

	if [ $result -ne 0 ]; then
	echo =e "\delete file $pgp_infile on $sftp_host failed\n"
	cat ftp_results.$$
        rm -fv ftp_results.$$
	exit 4
	fi

cat ftp_results.$$
rm -fv ftp_results.$$

echo -e "\nMove $local_file to $hcmdir_in"
mv $local_file $hcmdir_in
touch $hcmdir_in/$local_tagfile

	result=$?

	if [ $result -ne 0 -o -f $local_file ]; then
	echo -e "\nMove $localfile to $hcmdir_in failed, contact Production Services.\n"
 	exit 8
	fi

rm -f $local_file $pgp_infile 

archive_clean $inbound_archive .txt $FileAge

}

function inAon {

cd $inbound_dir

echo -e "\nget $pgp_infile from $sftp_host"
sftp -v $sftp_host <<PUT >ftp_results.$$
cd outbound
get $pgp_infile
bye
PUT

errorchk $? "get $pgp_infile from $sftp_host"

echo $PGPPASS | gpg --passphrase-fd 0 --batch -v --output $local_file --decrypt $pgp_infile >gpg_transcript.$$

	result=$?

	if [ $result -ne 0 -o ! -f $local_file ]; then
	echo -e "\nschwab data file encryption failure, contact Production Services.\n"
	cat gpg_transcript.$$
	rm -fv gpg_transcript.$$
  	exit 8
	fi

rm -fv gpg_transcript.$$

mv -fv $pgp_infile $inbound_archive

echo -e "\nArchive $pgp_infile on Schwab server" 
sftp -v $sftp_host <<ARCHDATA >ftp_results.$$ 2>&1
cd outbound
dir
rm $pgp_infile 
quit
ARCHDATA

#errorchk $? "Archive $pgp_infile on Schwab server"

echo -e "\nmove $local_file to $hcmdir_out2aon"
mv $local_file $hcmdir_out2aon
errorchk $? "move $local_file to $hcmdir_out2aon"

echo -e "\ncreate $hcmdir_out2aon/$local_tagfile"
touch $hcmdir_out2aon/$local_tagfile
errorchk $? "ncreate $hcmdir_out2aon/$local_tagfile"

#rm -fv $local_file $pgp_infile 

archive_clean $inbound_archive .txt $FileAge

}

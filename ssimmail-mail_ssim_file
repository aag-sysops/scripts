#!/bin/bash

export datestamp=`date +%m%d%y.%H%M`
export outbound_dir=$HOME/outbound
export outbound_archive=$HOME/outbound.archive
export FileAge=14
export ops=/opt/local/ops_scripts
export MSG=
program=`basename $0`

. /opt/local/ops_scripts/function_lib

export partner=$1

	if [ -z $partner ]; then
echo -e "\n	Missing direction parm.
	proper syntax is: mail_ssim_file partner where 
	partner equals the name of the partner being processed\n"
	exit 4
	fi

sleep 60

function mainproc {

cd $outbound_dir

export lzout_dir=scheduling/PartnerSSIM/$partner/outbound
export lzout_archive=scheduling/PartnerSSIM/$partner/outbound.archive

#mget file from lz
echo -e "\nftp get $basename file from $ftp_local_host\n"
	ftp -v -i $ftp_local_host <<MGET >ftp_results.$$
	cd $lzout
	dir
	mget $basename*
	bye
MGET
	result=$?

	if [ $result -ne 0 ];then
	echo "\nFTP get of ${basename}* file failed,
	please investigate\n"
	cat ftp_results.$$
	rm ftp_results.$$
	exit 4
	fi

cat ftp_results.$$
rm -f ftp_results.$$

#determine file name
sim_file=`ls -1 ${basename}*`
ssim_zip_file=${ssim_file}.zip

#local archive
securezip $sim_file outbound

#zip file
zip $ssim_zip_file $ssim_file

#mail file
echo -e "\nsend mail to $mail_list with $ssim_file attached" 
echo "$MSG" | mutt -s "ASQX Schedule Distribution" -a $ssim_zip_file $mail_list

#lz archive
ftp_file $ftp_local_host $sim_file $sim_file "cd $lzout_archive"

#lz clean up
ftp_delete $ftp_local_host $sim_file "cd $lzout_archive"

#local clean up
echo -e "\nclean up outbound directory"
rm -fv $sim_file  $ssim_zip_file

#archive clean
archive_clean $outbound_archive $basename $FileAge

}

case "$partner" in

	AF)
mail_dom=airfrance.fr
export mail_list="heduchamps$mail_dom,mail.it.flightdatabase$mail_dom,stpayetcellarius$mail_dom"
export basename=
mainproc
       ;;

	CX)
export mail_dom=@cathaypacific.com
export mail_list="betty_chan$mail_dom,conita_chan$mail_dom,lily_fong$mail_dom,jackie_tse$mail_dom,yvonne_chung$mail_dom,michael_yeung$mail_dom,murphy_shum$mail_dom,frank_fk_wong$mail_dom,preston_hung$mail_dom,gelfa_je$mail_dom,grace_leung$mail_dom,jason_tan$mail_dom"
export basename=
mainproc
       ;;

	FI)
export mail_dom=icelandair.is
export mail_list="unnur$mail_dom,hannesa$mail_dom,scheduling$mail_dom,kristjanh$mail_dom"
export basename=
mainproc
       ;;

	FJ)
export mail_dom=
export mail_list=""
export basename=
mainproc
       ;;

	KE)
export mail_dom=koreanair.com
export mail_list="hjeongpark$mail_dom,mkeum$mail_dom,mahkim$mail_dom"
export basename=
mainproc
       ;;

	KL)
export mail_dom=klm.com
export mail_list="GRPMH0001$mail_dom"
export basename=
mainproc
       ;;

	LA)
export mail_dom=lan.com
export mail_list="Jorge.aguayo$mail_dom,paola.ulloa$mail_dom,laura.caceres$mail_dom,patricia.narbona$mail_dom,romina.munoz$mail_dom,mauricio.sandoval$mail_dom"
export basename=
mainproc
       ;;

	NZ)
export mail_dom=airnz.co.nz
export mail_list="Suresh.Bhana$mail_dom,ian.cox$mail_dom,kasif.khalid$mail_dom"
export basename=
mainproc
       ;;

	QF)
export mail_dom=qantas.com.au
export mail_list="qfcodeshare$mail_dom"
export basename=
mainproc
       ;;

	*)
echo -e "\nargument is missing or invalid, 
need to pass one of the following arguments:
kl,  cx, ..."

exit 4





	result=$?

	if [ $result -ne 0 ]; then
	echo "zipping of $asinfile failed"
	exit 4
	fi

# start Horizon
echo -e "\nrename $qxinfile to $qxoutfile"
crlf_rem $qxinfile $qxoutfile

echo -e "\nzip QX DOT origin and destination reports"
zip $qxzipfile $qxoutfile

	result=$?

	if [ $result -ne 0 ]; then
	echo "zipping of $qxinfile failed"
	exit 4
	fi



# start AS_OO
echo -e "\nrename $ooinfile to $oooutfile"
crlf_rem $ooinfile $oooutfile

echo -e "\nzip OO DOT origin and destination reports"
zip $oozipfile $oooutfile

	result=$?

	if [ $result -ne 0 ]; then
	echo "zipping of $ooinfile failed"
	exit 4
	fi

# start common
ASCNT="AS: `tail -2 $ascntfile | sed -e 's/0\* \* \* \* \*//' | sed -e 's/\* \* \* \* \*//'`"
QXCNT="QX: `tail -2 $qxcntfile | sed -e 's/0\* \* \* \* \*//' | sed -e 's/\* \* \* \* \*//'`"
OOCNT="AS_OO: `tail -2 $oocntfile | sed -e 's/0\* \* \* \* \*//' | sed -e 's/\* \* \* \* \*//'`"

MSG="$ASCNT

$QXCNT

$OOCNT"

echo -e "\nsend mail to $mail_list with .zip files attached" 
echo "$MSG" | mutt -s "$asrptname, $qxrptname, & $oorptname O&D Data" -a $aszipfile -a $qxzipfile  -a $oozipfile $mail_list

echo -e "\nmove $aszipfile & $qxzipfile  & oozipfile to archive directory"
mv $aszipfile $outbound_archive/${aszipfile}.$datestamp
mv $qxzipfile $outbound_archive/${qxzipfile}.$datestamp
mv $oozipfile $outbound_archive/${oozipfile}.$datestamp

echo -e "\nremove temporary files from $outbound_dir"
rm -fv $asinfile $asoutfile $ascntfile $qxoutfile $qxinfile $qxcntfile $ooinfile $oooutfile $oocntfile
	
archive_clean $outbound_archive "AS" $FileAge
archive_clean $outbound_archive "AS_QX" $FileAge
archive_clean $outbound_archive "OO" $FileAge

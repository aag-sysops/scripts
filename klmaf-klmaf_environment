#!/bin/bash

set -x

# Set up the klmaf data transfer environment
# This script is used by other scripts to preset values from a common source.
# Usage: (in another script) ". $HOME/bin/klmaf_environment"

export PGPPASS=seavvdmzftp
export pgp_remote_signature='ID_sdf_AF'
export ftp_host=193.57.244.14
export ftp_local_host=asprodftp
export lz=mpprod
export tempfile=klmaftemp
export inbound_dir=$HOME/inbound
export inbound_archive=${inbound_dir}.archive
export outbound_dir=$HOME/outbound
export outbound_archive=${outbound_dir}.archive
export alert_recipient=eps@alaskaair.com
export datestamp=`/bin/date +%Y%m%d`
export nofiledate=`/bin/date "+%A, %D"`
export MAILLIST="joanne.gies@alaskaair.com"
FileAge=30

. /opt/local/ops_scripts/function_lib

function inbound {

cd $inbound_dir

echo -e "decrypt $indata_file"
echo $PGPPASS | gpg --passphrase-fd 0 --batch --output $local_file --decrypt $indata_file   
	result=$?

	if [ $result -ne 0 ]; then
	echo "${program}: inbound results file decrypt problem.  Call Ops Analyst."
        exit 8
	fi

records=`wc $local_file | awk '{print $2}'`

	if [ $records -eq 0 ]; then
	export MSG="klm or af data file for date $rundate is empty."
	echo -e "\n$MSG\n"
	echo $MSG | Mail -s "klmaf Mileage Plan data" $MAILLIST
	mv $local_file $inbound_archive/$local_file.MT.$datestamp
	exit 0
	fi

echo -e "\n$local_file file ($records records) received at `date`"

securezip $local_file inbound

ftp_check $ftp_local_host
ftp_solar_in $ftp_local_host $local_file

echo -e "\ncleaning up inbound directory"
rm -f $local_file $indata_file 

archive_clean $inbound_archive $local_file $FileAge

}

function outbound {

cd $outbound_dir

ftp_vendor_chk $ftp_host

securezip $data_file outbound

$HOME/bin/remove_crlf.pl $data_file > tempfile
	result=$?

	if [ $result -ne 0 ]; then
	echo -e  "\nchange record length failed, contact Systems Management"
	exit 4
	fi

$HOME/bin/200.pl tempfile > solarfile
	result=$?

	if [ $result -ne 0 ]; then
	echo -e  "\nchange record length failed, contact Systems Management"
	exit 4
	fi


echo -e "\nencrypt solarfile"
echo $PGPPASS | gpg --passphrase-fd 0 --batch -v --armor -r "$pgp_remote_signature" --output $out_pgp_file --encrypt solarfile >pgp_transcript.$$
	
	result=$?

	if [ $result -ne 0 ]; then
	echo -e "\nEncryption error on Alaska to KLMAF file solarfile,
	notify EPS during normal business hours\n"
	cat pgp_transcript.$$
	rm -f pgp_transcript.$$
	exit 4
	fi

rm -f pgp_transcript.$$

ftp_vendor $ftp_host $out_pgp_file $out_pgp_file bin

echo -e "\nremove local files in outbound"
rm -fv $data_file $out_pgp_file klmaf.tag solarfile tempfile

archive_clean $outbound_archive $data_file $FileAge

}

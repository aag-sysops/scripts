#!/bin/bash

# Set up the amex data transfer environment
# 2/3/07 Set up file transfer - jg
# 4/18/08 - cr15943 - added out1 proc to send Canadian currency file. ts.
# 6/29/11  - changed to drop crlf and rename US and CAN files. jg

export sftp_host=ALASKAAIRPRD@fsgateway.aexp.com
export ftp_local_host=asprodftp
export outbound_dir=$HOME/outbound
export outbound_archive=${outbound_dir}.archive
export inbound_dir=$HOME/inbound
export inbound_archive=${inbound_dir}.archive
export alert_recipient=joanne.gies@alaskaair.com
#export datestamp=`/bin/date +%b%d%Y.%H%M`
export datestamp=`/bin/date +%b%d%Y`
export dom=alaskaair.com
export mail_list="joanne.gies@alaskaair.com"
#export infor_to="joanne.gies@alaskaair.com"
export infor_to="accounts.receivable@$dom,fire.team.oncall.support@$dom"
export logfile=$HOME/transfer_log
export FileAge=30

. /opt/local/ops_scripts/function_lib

function outproc {

cd $outbound_dir

echo $datafile

echo -e "\nput $datafile to $sftp_host"
	sftp -v $sftp_host <<PUTDATA >ftp_results.$$
        cd inbox
	put $datafile 'ALASKAAIRPRD.SETTLEMENT.105246'
	dir
	quit
PUTDATA
	result=$?

	if [ $result -ne 0 ]; then
	echo "FTP put of $datafile to amex failed"
	cat ftp_results.$$
#	rm ftp_results.$$
	exit 4
	fi

cat ftp_results.$$
#rm -f ftp_results.$$

count_records=`wc -l $datafile | awk '{print $1}'`
echo -e "\n$count_records records sent to amex at $sftp_host"

echo -e "\nmove $datafile to $outbound_archive/$datafile.$datestamp.gz"
gzip <$datafile >$outbound_archive/$datafile.$datestamp.gz

echo -e "\nremove archived files older than $FileAge days"
find $outbound_archive/$datafile* -mtime +$FileAge -print |
	while read FILE1
	do
	echo "removing file $FILE1"
	rm -f $FILE1
	done

echo -e "\nclean up outbound directory\n"
rm -f $tagfile $datafile $temp_datafile

}

function outproc1 {

cd $outbound_dir

echo -e "\nput $datafile to $sftp_host"
	sftp -v $sftp_host <<PUTDATA >ftp_results.$$
        cd inbox
	put $datafile 'ALASKAAIRCAPRD.SETTLEMENT.105267'
	dir
	quit
PUTDATA
	result=$?

	if [ $result -ne 0 ]; then
	echo "FTP put of $datafile to amex failed"
	cat ftp_results.$$
	rm ftp_results.$$
	exit 4
	fi

cat ftp_results.$$
rm -f ftp_results.$$

securezip $datafile inbound 

echo -e "\nremove archived files older than $FileAge days"
find $outbound_archive/$datafile* -mtime +$FileAge -print |
	while read FILE1
	do
	echo "removing file $FILE1"
	rm -f $FILE1
	done

echo -e "\nclean up outbound directory\n"
rm -f $tagfile $datafile $temp_datafile

}

function getconfirm {

cd $inbound_dir

echo -e "\nget $country confirmation file from $sftp_host"
	sftp -v $sftp_host <<CHECK >ftp_results.$$
        cd outbox
	ls -l
	quit
CHECK

data_ready=`cat ftp_results.$$ | grep -c $fileprefix`

	if [ $data_ready -eq 0 ]; then
	echo -e "\nexpected confirmation file not found on AMEX, exiting\n"
	MSG="expected $country conf file AMEX not found at AMEX"
	echo $MSG | Mail -s "$country conf AMEX get" $mail_list
	cat ftp_results.$$
	rm -f ftp_resutlts.$$
	exit 4
	fi

	if [ $data_ready -ne 1 ]; then
	echo -e "\nthere are $data_ready files to process, expecting one\n"
	cat ftp_results.$$
        rm -f ftp_resutlts.$$
	exit 4
	fi

cat ftp_results.$$
rm -fv ftp_resutlts.$$

data_file=`cat ftp_results.$$ | grep $fileprefix | awk '{print $9}'`

echo -e "processing $country file $data_file"

cat ftp_results.$$
rm -fv ftp_results.$$

echo -e "\nget $data_file from $sftp_host"
	sftp -v $sftp_host <<GETDATA >ftp_results.$$
	cd outbox
	get $data_file
	quit
GETDATA

count_records=`wc -l $data_file | awk '{print $1}'`
echo -e "\n$count_records records from amex confirmation file at $sftp_host"

securezip $data_file inbound

ftp_file $ftp_local_host $data_file $data_file.$datestamp.txt "cd AR_AccountsReceivable/AmexC"

echo "Send mail notification to $infor_to"
Mail -s "AMEX $country - $fileprefix - File confirmation at `date`" $infor_to < $data_file

archive_clean $inbound_archive $fileprefix $FileAge

echo -e "\nclean up outbound directory\n"
rm -fv $tagfile $data_file

}

#!/bin/sh

. $HOME/bin/ipsos_environment

#--------------------------------------------------------------------------
# This script goes out to seavvfile1\ftpprod\mplan\ipsos and pulls in a file to place on the Linux server.
# It is then encrypted then sent to IPSOS  
#--------------------------------------------------------------------------

cd $outbound_dir

#get the file
echo -e "\nget $data file from asprodftp" 
	ftp -v asprodftp <<GETDATA >ftp_results.$$
	cd "mpprod\IPSOS"
	get $data_file
	bye
GETDATA

	result=$?

	if [ $result -ne 0 ]; then
	echo "ftp get of $data_file failed"
	cat ftp_results.$$
	exit 4
	fi

rm -f ftp_results.$$

# Encrypt the file with recipients signature
# Note that the variable $gpg_secret MUST be exported and contain our
# passphrase in order to have the encryption work in non-interactive mode
echo -e "\nencrypt $data_file"

echo $PGPPASS | gpg --passphrase-fd 0 --batch -v --armor --sign -r "Veronica Gunta" -o $pgp_data_file --encrypt $data_file >pgp_transcript.$$ 2>&1
	result=$?

	if [ $result -ne 0 ]; then
	echo -e "\n$data_file encryption failure, contact EPS\n"
	cat pgp_transcript.$$
	exit 8
	fi

rm -f pgp_transcript.$$

echo -e "\ncalling function ftpipsos"
ftpipsos

echo -e "\nmove $data file on asprodftp" 
	ftp -v asprodftp <<GETDATA >ftp_results.$$
	cd "mpprod\IPSOS\Processed"
	put alaska_survey.csv alaska_survey.$outdate.csv
        cd ..
        del alaska_survey.csv
	bye
GETDATA

echo -e "\ncreate archived version of handback file"
gzip <$data_file >$outbound_archive/$data_file.$datestamp.gz

output_records=`wc -l $data_file`
echo -e "\n$datestamp: $output_records data records sent"

echo -e "\nclean up outbound directory"
rm -f ftp_results.$$ $pgp_data $tag_file $data_file alaska.$outdate.asc

archive_clean $outbound_archive $data_file $FileAge

#!/bin/bash

set -x 
export pgppass=seavvdmzftp
export pgp_rem_sig=EDSELIT
#export sftp_host=ASAAtest@mft2.svcs.hp.com
export sftp_host=ASAA@mft2.svcs.hpe.com
export ftp_local_host=asprodftp
#export ftp_local_host=testftp
export inbound_dir=$HOME/inbound
export inbound_archive=${inbound_dir}.archive
export outbound_dir=$HOME/outbound
export outbound_archive=${outbound_dir}.archive
export datestamp=`/bin/date +%b%d%Y.%H%M`
export indate=`date +%y%m%d`
export info_to="joanne.gies@alaskaair.com,dean.liebricha@alaskaair.com"
export FileAge=14

. /opt/local/ops_scripts/function_lib

direction=$1

#make sure direction parm was passed in as first arg
        if [ -z $direction ]; then
echo -e "\n     Missing direction parm.
        proper syntax is: process_american_billing_new direction where
        direction equals in or out\n"
        exit 4
        fi

function outproc {

cd $outbound_dir

ftp_check $ftp_local_host

echo -e "\ncheck for ftp connectivity to $sftp_host"
	sftp -v $sftp_host <<TEST >ftp_results.$$
	pwd
	bye
TEST

ftptest=`grep -i -c -e "Remote working directory" ftp_results.$$`

	if [ $ftptest -lt 1 ]; then
echo -e "\nUNABLE TO OPEN SFTP SESSION TO $sftp_host\n"
	cat ftp_results.$$
	rm ftp_results.$$
	exit 4
	else
echo -e "\nconnection to $sftp_host confirmed, processing continues...\n"
rm ftp_results.$$
	fi

ftp_retrocred_out $ftp_local_host $file_prefix "cd $lz"

export data_file=`ls -1 ${file_prefix}*`
export outfile=${outfile_pref}`echo $data_file |sed -e 's/_//g' | cut $cutamt`.PROD
securezip $data_file outbound

echo $pgppass | gpg --passphrase-fd 0 --batch --armor -r $pgp_rem_sig --output $outfile --encrypt $data_file >pgp_transcript.$$ 2>&1
errorchk $? "encrypt outbound $data_file for `whoami`"

echo -e "\nsftp data files to $sftp_host"
	sftp -v $sftp_host <<PUT >ftp_results.$$
	$chgdir
	put $outfile
	bye
PUT
errorchk $? "ftp data files to $sftp_host"

ftp_retrocred_in $ftp_local_host $data_file "cd $lz/archive"

ftp_delete $ftp_local_host $data_file "cd $lz/archive"

ftp_delete $ftp_local_host $tag_file "cd $lz"

echo -e "\nremove $data_file files from $outbound_dir"
rm -fv $data_file pgp_transcript.$$ $outfile
errorchk $? "remove $data_file from $outbound_dir"

archive_clean $outbound_archive $file_prefix $FileAge

}

function inproc {

cd $inbound_dir

ftp_check $ftp_local_host

export pgp_file=`ls -1 $in_file_pref*`

echo $pgppass | gpg --passphrase-fd 0 --batch --output $local_tmp_file --decrypt $pgp_file >pgp_transcript.$$ 2>&1 
errorchk $? "decrypt $pgp_file for inbound `whoami`"

mv -fv $pgp_file $inbound_archive
#errorchk $? "move $pgp_file to $inbound_archive"

echo -e "\nremove carriage control"
$HOME/bin/remove_crlf.pl $local_tmp_file >$local_file
errorchk $? "remove carriage control"


ftp_file $ftp_local_host $local_file  $local_file "cd $lz"

echo "remove temp files"
rm -fv $local_file pgp_transcript.$$ $local_tmp_file
errorchk $? "remove temp files from $inbound_dir"

archive_clean $inbound_archive $in_file_pref $FileAge

}

case "$direction" in 

	bill_in)

export lz=mplan/AA_Billing_Detail
export in_file_pref=BFAS
export local_tmp_file=BF${indate}AA.tmp
export local_file=BF${indate}.AA
echo -e "\nBegin processing for monthly billing file"
inproc
echo -e "\nProcessing for monthly billing file complete"
	;;

       bill_out)
#export lz=mpplan\AA_Billing_Detail
#export in_file_pref=BFASPROD
#export local_tmp_file=BF{indate}.txt
#export local_file=ASResponse_AA_${indate}.AA
#echo -e "\nBegin processing for hand back file"
#outproc
#echo -e "\nProcessing for hand back file complete"
#	;;




esac

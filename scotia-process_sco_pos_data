#!/bin/bash

# Set the environment variable
export PGPPASS=seavvdmzftp
export remote_sig="eaaprod"
export ftp_host=205.210.223.63
export ftp_local_host=asprodftp
export outbound_dir=$HOME/outbound
export outbound_archive=${outbound_dir}.archive
export inbound_dir=$HOME/inbound
export inbound_archive=${inbound_dir}.archive
export tagfile=boa_apos.tag
export DT=`date '+%c'`
export info_to="dean.liebrich@alaskaair.com,joanne.gies@alaskair.com"
export datestamp=`/bin/date '+%b%d%Y.%H%M'`
export outdate=`/bin/date '+%Y%m%d'`
#export infor_to="ps.fin.production.system.msgs@alaskaair.com,joanne.gies@alaskaair.com"
#export infor_to="joanne.gies@alaskaair.com"
export logfile=$HOME/transfer_log
export FileAge=99

. /opt/local/ops_scripts/function_lib

export airdir=$1

	if [ -z $airdir ]; then
echo -e "\n	Missing airline/direction parm,
	proper syntax is process_scotia_data airline.direction
	where airline=as or qx and direction=in or out. i.e.
	process_scotia_data asout\n"
	exit 4
	fi

function outproc {

rm ~/.netrc
ln -s ~/.netrc.$airdir ~/.netrc

cd $outbound_dir

ftp_vendor_chk $ftp_host

echo -e "\ncopy $data_file from $psfindir_out to $outbound_dir"
cp $psfindir_out/$data_file $outbound_dir
errorchk $? "copy $data_file from $psfindir_out to $outbound_dir"

echo -e "\nencrypting file $data_file"
echo $PGPPASS | gpg --passphrase-fd 0 --batch -v --armor --sign -r "$remote_sig" --output $data_file_asc --encrypt $data_file >pgp_transcript.$$	

errorchk $? "encrypt file $data_file"

cat pgp_transcript.$$
rm -f pgp_transcript.$$

ftp_vendor $ftp_host $data_file_asc "$sco_pgp_file" bin

securezip $data_file outbound

echo -e "\nremove temporary files"
rm -fv $data_file $data_file_asc $psfindir_out/$tag_file $psfindir_out/$data_file

archive_clean $outbound_archive $data_file $FileAge

}

function inproc {

rm ~/.netrc
ln -s ~/.netrc.$airdir ~/.netrc

cd $inbound_dir

ftp_vendor_chk $ftp_host
ftp_vendor_check $ftp_local_host

ftp_vendor_get $ftp_host "$sco_pgp_file" $local_pgp_file bin

echo -e "\ndecrypt $local_pgp_file" 
echo $PGPPASS | gpg --passphrase-f 0 --batch --decrypt --output $local_file $local_pgp_file >pgp_transcript.$$
errorck $? "decrypt $local_pgp_file"

ftp_vendor $ftp_local_host $local_file $local_file.$outdate.txt "cd PSFINFTP/AP/APPOSPAY"

securezip $local_file inbound

echo "Send mail notification to $infor_to"
Mail -s "The $airline Scotia report has been sent to your server at `date`" $infor_to < $local_file

echo "remove temp files"
rm -fv $local_file $local_pgp_file

archive_clean $outbound_archive $data_file $FileAge

}

case "$airdir" in

	qxin)
export airline=QX
export sco_pgp_file=RSAPEDCI.new
export local_file=qxscotia-report
export local_pgp_file=${local_file}.pgp

echo -e "\nBegin processing for QX inbound $local_file"
inproc
echo -e "\nInbound processing complete for $local_file"

;;

	asin)

export airline=AS
export sco_pgp_file=RSAPEDCI.new  
export local_file=scotia-report
export local_pgp_file=${local_file}.pgp

echo -e "\nBegin processing for AS inbound $local_file"
inproc
echo -e "\nInbound processing complete for $local_file"

;;

	asout)
airline=AS
export psfindir_out=/home/finprod/outbound/ap_asscotia
export data_file=appospay_AS_SCO.dat
export tag_file=appospay_AS_SCO.tag
export data_file_asc=${data_file}.asc
export sco_pgp_file=appaysco.RSAHCHIN

echo -e "\nBegin processing for $airline outbound file $data_file"
outproc
echo -e "\nOutbound processing complete for $airline file $data_file"

;;

	qxout)
export airline=QX
export psfindir_out=/home/finprod/outbound/ap_qxscotia
export data_file=appospay_QX_SCO.dat
export tag_file=appospay_QX_SCO.tag
export data_file_asc=${data_file}.asc
export sco_pgp_file=qxapposcad.RSAHCHIN

echo -e "\nBegin processing for $airline outbound file $data_file"
outproc
echo -e "\nOutbound processing complete for $airline file $data_file"

;;

esac
